{"version":3,"sources":["../bower_components/ev-emitter/ev-emitter.js","../bower_components/jquery-fullheight/dist/jquery-fullheight.js","../bower_components/isMobile/isMobile.js","../bower_components/jquery-mousewheel/jquery.mousewheel.js","../bower_components/bxslider-4/dist/jquery.bxslider.js","../bower_components/equalize/js/equalize.js","../bower_components/equalize/js/equalize.min.js","../bower_components/scrollbox/dist/js/scrollbox.js","../assets/scripts/main.js"],"names":["global","factory","define","amd","module","exports","EvEmitter","window","this","proto","prototype","on","eventName","listener","events","_events","listeners","indexOf","push","once","onceEvents","_onceEvents","onceListeners","off","length","index","splice","emitEvent","args","i","isOnce","apply","$","FullHeight","el","options","data","each","attr","value","test","key","replace","toLowerCase","extend","defaults","debug","container","property","propertyBefore","css","allowDeviceHeightResize","lastWidth","innerWidth","timerResize","proxy","update","IS_DEVICE","navigator","userAgent","_onResize","newWidth","allowResize","root","clearTimeout","setTimeout","console","log","newHeight","offset","innerHeight","top","lastHeight","dispose","fn","fullheight","jQuery","apple_phone","apple_ipod","apple_tablet","android_phone","android_tablet","amazon_phone","amazon_tablet","windows_phone","windows_tablet","other_blackberry","other_blackberry_10","other_opera","other_chrome","other_firefox","seven_inch","RegExp","match","regex","IsMobileClass","ua","tmp","split","apple","phone","ipod","tablet","device","amazon","android","windows","other","blackberry","blackberry10","opera","firefox","chrome","any","instantiate","IM","Class","isMobile","handler","event","orgEvent","slice","call","arguments","delta","deltaX","deltaY","absDelta","offsetX","offsetY","fix","type","detail","wheelDelta","wheelDeltaY","wheelDeltaX","axis","HORIZONTAL_AXIS","deltaMode","lineHeight","pageHeight","Math","max","abs","lowestDelta","shouldAdjustOldDeltas","special","settings","normalizeOffset","getBoundingClientRect","boundingRect","clientX","left","clientY","deltaFactor","unshift","nullLowestDeltaTimeout","nullLowestDelta","dispatch","handle","adjustOldDeltas","toFix","toBind","document","documentMode","Array","fixHooks","mouseHooks","mousewheel","version","setup","addEventListener","onmousewheel","getLineHeight","getPageHeight","teardown","removeEventListener","removeData","elem","$elem","$parent","parseInt","height","bind","trigger","unmousewheel","unbind","mode","slideSelector","infiniteLoop","hideControlOnEnd","speed","easing","slideMargin","startSlide","randomStart","captions","ticker","tickerHover","adaptiveHeight","adaptiveHeightSpeed","video","useCSS","preloadImages","responsive","slideZIndex","wrapperClass","touchEnabled","swipeThreshold","oneToOneTouch","preventDefaultSwipeX","preventDefaultSwipeY","ariaLive","ariaHidden","keyboardEnabled","pager","pagerType","pagerShortSeparator","pagerSelector","buildPager","pagerCustom","controls","nextText","prevText","nextSelector","prevSelector","autoControls","startText","stopText","autoControlsCombine","autoControlsSelector","auto","pause","autoStart","autoDirection","stopAutoOnClick","autoHover","autoDelay","autoSlideForOnePage","minSlides","maxSlides","moveSlides","slideWidth","shrinkItems","onSliderLoad","onSlideBefore","onSlideAfter","onSlideNext","onSlidePrev","onSliderResize","bxSlider","slider","windowWidth","width","windowHeight","init","children","floor","random","active","carousel","minThreshold","maxThreshold","working","interval","animProp","usingCSS","div","createElement","props","undefined","style","cssPrefix","preloadSelector","eq","wrap","viewport","parent","loader","prepend","position","overflow","maxWidth","getViewportMaxWidth","margin","float","listStyle","getSlideWidth","zIndex","display","appendCaptions","last","getPagerQty","fitVids","appendControls","appendControlsAuto","appendPager","after","loadElements","start","selector","callback","total","find","count","one","complete","load","sliceAppend","clone","addClass","slicePrepend","append","remove","setSlidePosition","getViewportHeight","redrawSlider","initialized","resizeWindow","initAuto","initTicker","updatePagerActive","updateDirectionControls","initTouch","keydown","keyPress","currentIndex","getMoveBy","add","outerHeight","map","get","parseFloat","newElWidth","wrapWidth","ceil","getNumberSlidesShowing","slidesShowing","childWidth","first","pagerQty","breakPoint","counter","lastChild","lastShowingIndex","setPositionProperty","outerWidth","duration","params","animateObj","propValue","e","target","is","updateAfterSlideTransition","resetValue","tickerLoop","animate","populatePager","pagerHtml","linkContent","isFunction","pagerEl","html","clickPagerBind","next","prev","clickNextBind","clickPrevBind","directionEl","stop","autoEl","clickStartBind","clickStopBind","updateAutoControls","title","preventDefault","hasClass","stopAuto","goToNextSlide","goToPrevSlide","startAuto","pagerLink","pagerIndex","currentTarget","goToSlide","slideIndex","len","removeClass","oldIndex","state","focus","blur","hover","autoPaused","transform","idx","ratio","newSpeed","totalDimens","startPosition","resumeSpeed","animateProperty","reset","isOnScreen","win","scrollTop","scrollLeft","bounds","right","bottom","activeElementTag","activeElement","tagName","tagFilters","p","result","exec","keyCode","touch","x","y","end","onTouchStart","originalPos","orig","originalEvent","touchPoints","changedTouches","pageX","pageY","setPointerCapture","pointerId","onTouchMove","onTouchEnd","onPointerCancel","releasePointerCapture","xMovement","yMovement","change","distance","windowWidthNew","windowHeightNew","applyAriaHiddenAttributes","startVisibleIndex","numberOfSlidesShowing","setSlideIndex","direction","requestEl","performTransition","moveBy","filter","fadeOut","fadeIn","preventControlUpdate","setInterval","clearInterval","getCurrentSlide","getCurrentSlideElement","getSlideElement","getSlideCount","isWorking","destroySlider","removeAttr","unwrap","reloadSlider","equalize","$containers","isPlainObject","$children","$element","n","t","h","c","s","name","Scrollbox","that","methods","$rail","templates","rail","$bar","bar","method","_isBarCaptured","_isShown","_isCorrectionRequired","_prevY","_isReachTriggered","_scrollHeight","_setScrolledToY","_barTouchId","_elementTouchId","_swipeStartY","_swipeStartedAt","$wrapper","wrapper","_updateBarHeight","addListeners","jump","mousedown","touchstart","scroll","mouseup","mousemove","touchend","touchmove","removeListeners","_onWheel","_onBarMouseDown","_onBarTouchStart","_onElementScroll","_onElementTouchStart","_onDocumentMouseUp","_onDocumentMouseMove","_onDocumentTouchEnd","_onDocumentTouchMove","wheelSensitivity","which","_dragStart","_drag","_dragStop","touches","targetTouches","identifier","_swipe","swipeDuration","swipeDistance","swipeSpeed","Date","now","momentum","thresholdTime","acceleration","_updateBarPosition","_checkIsReached","elementHeight","_getScrollHeight","animationOptions","computedDestination","destination","_getScrolledToY","progress","animation","isShown","_scrolledToY","scrollHeight","scrolledTo","distanceToReach","Event","destroy","b","d","pow","option","$this","Constructor","ready"],"mappings":"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","file":"main.js","sourcesContent":["/**\n * EvEmitter v1.0.3\n * Lil' event emitter\n * MIT License\n */\n\n/* jshint unused: true, undef: true, strict: true */\n\n( function( global, factory ) {\n  // universal module definition\n  /* jshint strict: false */ /* globals define, module, window */\n  if ( typeof define == 'function' && define.amd ) {\n    // AMD - RequireJS\n    define( factory );\n  } else if ( typeof module == 'object' && module.exports ) {\n    // CommonJS - Browserify, Webpack\n    module.exports = factory();\n  } else {\n    // Browser globals\n    global.EvEmitter = factory();\n  }\n\n}( typeof window != 'undefined' ? window : this, function() {\n\n\"use strict\";\n\nfunction EvEmitter() {}\n\nvar proto = EvEmitter.prototype;\n\nproto.on = function( eventName, listener ) {\n  if ( !eventName || !listener ) {\n    return;\n  }\n  // set events hash\n  var events = this._events = this._events || {};\n  // set listeners array\n  var listeners = events[ eventName ] = events[ eventName ] || [];\n  // only add once\n  if ( listeners.indexOf( listener ) == -1 ) {\n    listeners.push( listener );\n  }\n\n  return this;\n};\n\nproto.once = function( eventName, listener ) {\n  if ( !eventName || !listener ) {\n    return;\n  }\n  // add event\n  this.on( eventName, listener );\n  // set once flag\n  // set onceEvents hash\n  var onceEvents = this._onceEvents = this._onceEvents || {};\n  // set onceListeners object\n  var onceListeners = onceEvents[ eventName ] = onceEvents[ eventName ] || {};\n  // set flag\n  onceListeners[ listener ] = true;\n\n  return this;\n};\n\nproto.off = function( eventName, listener ) {\n  var listeners = this._events && this._events[ eventName ];\n  if ( !listeners || !listeners.length ) {\n    return;\n  }\n  var index = listeners.indexOf( listener );\n  if ( index != -1 ) {\n    listeners.splice( index, 1 );\n  }\n\n  return this;\n};\n\nproto.emitEvent = function( eventName, args ) {\n  var listeners = this._events && this._events[ eventName ];\n  if ( !listeners || !listeners.length ) {\n    return;\n  }\n  var i = 0;\n  var listener = listeners[i];\n  args = args || [];\n  // once stuff\n  var onceListeners = this._onceEvents && this._onceEvents[ eventName ];\n\n  while ( listener ) {\n    var isOnce = onceListeners && onceListeners[ listener ];\n    if ( isOnce ) {\n      // remove listener\n      // remove before trigger to prevent recursion\n      this.off( eventName, listener );\n      // unset once flag\n      delete onceListeners[ listener ];\n    }\n    // trigger listener\n    listener.apply( this, args );\n    // get next listener\n    i += isOnce ? 0 : 1;\n    listener = listeners[i];\n  }\n\n  return this;\n};\n\nreturn EvEmitter;\n\n}));\n","/*!\n * jQuery FullHeight v1.0.8\n * https://github.com/yrkup3/jquery-fullheight\n * Copyright (c) 2015 Andrey Pervakov\n * Licensed under the MIT license.\n */\n\n(function ($) {\n\n\t'use strict';\n\n\t// Device check for limiting resize handling.\n\tvar IS_DEVICE = /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\n\n\tfunction FullHeight(el, options) {\n\t\tthis.el = $(el);\n\n\t\tvar data = {};\n\t\t$.each(this.el.data(), function (attr, value) {\n\t\t\tif (/^fullheight/.test(attr)) {\n\t\t\t\tvar key = attr.replace('fullheight', '').toLowerCase();\n\t\t\t\tdata[key] = value;\n\t\t\t}\n\t\t});\n\t\toptions = $.extend({}, FullHeight.defaults, options, data);\n\t\tthis.debug = options.debug;\n\t\tthis.container = $(options.container);\n\t\tthis.property = options.property;\n\t\tthis.propertyBefore = this.el.css(this.property);\n\n\t\t// Chrome for Android resizes the browser a lot when scrolling due to the address bar collapsing.\n\t\t// This causes a lot of arbitrary layout jumps and slow image resize operations with this plugin.\n\t\t// So for device UA where height should not change, we only update if the width changes as well (f.ex.\n\t\t// orientation changes).\n\t\tthis.allowDeviceHeightResize = !(\n\t\t\toptions.allowDeviceHeightResize === null ||\n\t\t\toptions.allowDeviceHeightResize === false ||\n\t\t\toptions.allowDeviceHeightResize === 'false'\n\t\t);\n\t\tthis.lastWidth = this.container.innerWidth();\n\t\tthis.timerResize = 0;\n\n\t\tthis.container.on('resize.yrkup3.fullheight', $.proxy(this, '_onResize'));\n\n\t\tthis.update();\n\t}\n\n\tFullHeight.defaults = {\n\t\tdebug: false,\n\t\tallowDeviceHeightResize: false,\n\t\tcontainer: window,\n\t\tproperty: 'min-height'\n\t};\n\n\tFullHeight.prototype._onResize = function () {\n\t\tvar newWidth = this.container.innerWidth();\n\t\tvar allowResize = !IS_DEVICE || this.allowDeviceHeightResize || newWidth !== this.lastWidth;\n\n\t\t// Do the update if expected.\n\t\tif (allowResize) {\n\t\t\tvar root = this;\n\t\t\tclearTimeout(this.timerResize);\n\t\t\tthis.timerResize = setTimeout(function () {\n\t\t\t\troot.update();\n\t\t\t}, 200);\n\t\t}\n\n\t\tthis.lastWidth = newWidth;\n\t};\n\n\tFullHeight.prototype.update = function () {\n\t\tif (this.debug) {\n\t\t\tconsole.log('update', this.el);\n\t\t}\n\t\tvar newHeight;\n\t\tvar offset = this.container.offset();\n\t\tif (typeof offset == 'undefined') {\n\t\t\tnewHeight = $(window).innerHeight();\n\t\t} else {\n\t\t\tnewHeight = this.container.innerHeight() - (this.el.offset().top - offset.top);\n\t\t}\n\t\tif (newHeight !== this.lastHeight) {\n\t\t\tif (this.debug) {\n\t\t\t\tconsole.log('set `' + this.property + '` to ' + newHeight);\n\t\t\t}\n\t\t\tthis.el.css(this.property, newHeight);\n\t\t\tthis.lastHeight = newHeight;\n\t\t}\n\t};\n\n\tFullHeight.prototype.dispose = function () {\n\t\tif (this.debug) {\n\t\t\tconsole.log('dispose');\n\t\t}\n\t\tthis.container.off('.yrkup3.fullheight');\n\t\tthis.el.css(this.property, this.propertyBefore);\n\t};\n\n\t$.fn.fullheight = function (options) {\n\t\tthis.each(function () {\n\t\t\tvar el = $(this);\n\t\t\t// Store data\n\t\t\tvar data = el.data('yrkup3.fullheight');\n\t\t\tif (!data) {\n\t\t\t\tel.data('yrkup3.fullheight', (data = new FullHeight(el, options)));\n\t\t\t}\n\t\t\t// Run command\n\t\t\tif (typeof options == 'string') {\n\t\t\t\tdata[options]();\n\t\t\t}\n\t\t});\n\t\treturn this;\n\t};\n\n})(jQuery);\n","/**\n * isMobile.js v0.4.1\n *\n * A simple library to detect Apple phones and tablets,\n * Android phones and tablets, other mobile devices (like blackberry, mini-opera and windows phone),\n * and any kind of seven inch device, via user agent sniffing.\n *\n * @author: Kai Mallea (kmallea@gmail.com)\n *\n * @license: http://creativecommons.org/publicdomain/zero/1.0/\n */\n(function (global) {\n\n    var apple_phone         = /iPhone/i,\n        apple_ipod          = /iPod/i,\n        apple_tablet        = /iPad/i,\n        android_phone       = /(?=.*\\bAndroid\\b)(?=.*\\bMobile\\b)/i, // Match 'Android' AND 'Mobile'\n        android_tablet      = /Android/i,\n        amazon_phone        = /(?=.*\\bAndroid\\b)(?=.*\\bSD4930UR\\b)/i,\n        amazon_tablet       = /(?=.*\\bAndroid\\b)(?=.*\\b(?:KFOT|KFTT|KFJWI|KFJWA|KFSOWI|KFTHWI|KFTHWA|KFAPWI|KFAPWA|KFARWI|KFASWI|KFSAWI|KFSAWA)\\b)/i,\n        windows_phone       = /Windows Phone/i,\n        windows_tablet      = /(?=.*\\bWindows\\b)(?=.*\\bARM\\b)/i, // Match 'Windows' AND 'ARM'\n        other_blackberry    = /BlackBerry/i,\n        other_blackberry_10 = /BB10/i,\n        other_opera         = /Opera Mini/i,\n        other_chrome        = /(CriOS|Chrome)(?=.*\\bMobile\\b)/i,\n        other_firefox       = /(?=.*\\bFirefox\\b)(?=.*\\bMobile\\b)/i, // Match 'Firefox' AND 'Mobile'\n        seven_inch = new RegExp(\n            '(?:' +         // Non-capturing group\n\n            'Nexus 7' +     // Nexus 7\n\n            '|' +           // OR\n\n            'BNTV250' +     // B&N Nook Tablet 7 inch\n\n            '|' +           // OR\n\n            'Kindle Fire' + // Kindle Fire\n\n            '|' +           // OR\n\n            'Silk' +        // Kindle Fire, Silk Accelerated\n\n            '|' +           // OR\n\n            'GT-P1000' +    // Galaxy Tab 7 inch\n\n            ')',            // End non-capturing group\n\n            'i');           // Case-insensitive matching\n\n    var match = function(regex, userAgent) {\n        return regex.test(userAgent);\n    };\n\n    var IsMobileClass = function(userAgent) {\n        var ua = userAgent || navigator.userAgent;\n\n        // Facebook mobile app's integrated browser adds a bunch of strings that\n        // match everything. Strip it out if it exists.\n        var tmp = ua.split('[FBAN');\n        if (typeof tmp[1] !== 'undefined') {\n            ua = tmp[0];\n        }\n\n        // Twitter mobile app's integrated browser on iPad adds a \"Twitter for\n        // iPhone\" string. Same probable happens on other tablet platforms.\n        // This will confuse detection so strip it out if it exists.\n        tmp = ua.split('Twitter');\n        if (typeof tmp[1] !== 'undefined') {\n            ua = tmp[0];\n        }\n\n        this.apple = {\n            phone:  match(apple_phone, ua),\n            ipod:   match(apple_ipod, ua),\n            tablet: !match(apple_phone, ua) && match(apple_tablet, ua),\n            device: match(apple_phone, ua) || match(apple_ipod, ua) || match(apple_tablet, ua)\n        };\n        this.amazon = {\n            phone:  match(amazon_phone, ua),\n            tablet: !match(amazon_phone, ua) && match(amazon_tablet, ua),\n            device: match(amazon_phone, ua) || match(amazon_tablet, ua)\n        };\n        this.android = {\n            phone:  match(amazon_phone, ua) || match(android_phone, ua),\n            tablet: !match(amazon_phone, ua) && !match(android_phone, ua) && (match(amazon_tablet, ua) || match(android_tablet, ua)),\n            device: match(amazon_phone, ua) || match(amazon_tablet, ua) || match(android_phone, ua) || match(android_tablet, ua)\n        };\n        this.windows = {\n            phone:  match(windows_phone, ua),\n            tablet: match(windows_tablet, ua),\n            device: match(windows_phone, ua) || match(windows_tablet, ua)\n        };\n        this.other = {\n            blackberry:   match(other_blackberry, ua),\n            blackberry10: match(other_blackberry_10, ua),\n            opera:        match(other_opera, ua),\n            firefox:      match(other_firefox, ua),\n            chrome:       match(other_chrome, ua),\n            device:       match(other_blackberry, ua) || match(other_blackberry_10, ua) || match(other_opera, ua) || match(other_firefox, ua) || match(other_chrome, ua)\n        };\n        this.seven_inch = match(seven_inch, ua);\n        this.any = this.apple.device || this.android.device || this.windows.device || this.other.device || this.seven_inch;\n\n        // excludes 'other' devices and ipods, targeting touchscreen phones\n        this.phone = this.apple.phone || this.android.phone || this.windows.phone;\n\n        // excludes 7 inch devices, classifying as phone or tablet is left to the user\n        this.tablet = this.apple.tablet || this.android.tablet || this.windows.tablet;\n\n        if (typeof window === 'undefined') {\n            return this;\n        }\n    };\n\n    var instantiate = function() {\n        var IM = new IsMobileClass();\n        IM.Class = IsMobileClass;\n        return IM;\n    };\n\n    if (typeof module !== 'undefined' && module.exports && typeof window === 'undefined') {\n        //node\n        module.exports = IsMobileClass;\n    } else if (typeof module !== 'undefined' && module.exports && typeof window !== 'undefined') {\n        //browserify\n        module.exports = instantiate();\n    } else if (typeof define === 'function' && define.amd) {\n        //AMD\n        define('isMobile', [], global.isMobile = instantiate());\n    } else {\n        global.isMobile = instantiate();\n    }\n\n})(this);\n","/*!\n * jQuery Mousewheel 3.1.13\n *\n * Copyright jQuery Foundation and other contributors\n * Released under the MIT license\n * http://jquery.org/license\n */\n\n(function (factory) {\n    if ( typeof define === 'function' && define.amd ) {\n        // AMD. Register as an anonymous module.\n        define(['jquery'], factory);\n    } else if (typeof exports === 'object') {\n        // Node/CommonJS style for Browserify\n        module.exports = factory;\n    } else {\n        // Browser globals\n        factory(jQuery);\n    }\n}(function ($) {\n\n    var toFix  = ['wheel', 'mousewheel', 'DOMMouseScroll', 'MozMousePixelScroll'],\n        toBind = ( 'onwheel' in document || document.documentMode >= 9 ) ?\n                    ['wheel'] : ['mousewheel', 'DomMouseScroll', 'MozMousePixelScroll'],\n        slice  = Array.prototype.slice,\n        nullLowestDeltaTimeout, lowestDelta;\n\n    if ( $.event.fixHooks ) {\n        for ( var i = toFix.length; i; ) {\n            $.event.fixHooks[ toFix[--i] ] = $.event.mouseHooks;\n        }\n    }\n\n    var special = $.event.special.mousewheel = {\n        version: '3.1.12',\n\n        setup: function() {\n            if ( this.addEventListener ) {\n                for ( var i = toBind.length; i; ) {\n                    this.addEventListener( toBind[--i], handler, false );\n                }\n            } else {\n                this.onmousewheel = handler;\n            }\n            // Store the line height and page height for this particular element\n            $.data(this, 'mousewheel-line-height', special.getLineHeight(this));\n            $.data(this, 'mousewheel-page-height', special.getPageHeight(this));\n        },\n\n        teardown: function() {\n            if ( this.removeEventListener ) {\n                for ( var i = toBind.length; i; ) {\n                    this.removeEventListener( toBind[--i], handler, false );\n                }\n            } else {\n                this.onmousewheel = null;\n            }\n            // Clean up the data we added to the element\n            $.removeData(this, 'mousewheel-line-height');\n            $.removeData(this, 'mousewheel-page-height');\n        },\n\n        getLineHeight: function(elem) {\n            var $elem = $(elem),\n                $parent = $elem['offsetParent' in $.fn ? 'offsetParent' : 'parent']();\n            if (!$parent.length) {\n                $parent = $('body');\n            }\n            return parseInt($parent.css('fontSize'), 10) || parseInt($elem.css('fontSize'), 10) || 16;\n        },\n\n        getPageHeight: function(elem) {\n            return $(elem).height();\n        },\n\n        settings: {\n            adjustOldDeltas: true, // see shouldAdjustOldDeltas() below\n            normalizeOffset: true  // calls getBoundingClientRect for each event\n        }\n    };\n\n    $.fn.extend({\n        mousewheel: function(fn) {\n            return fn ? this.bind('mousewheel', fn) : this.trigger('mousewheel');\n        },\n\n        unmousewheel: function(fn) {\n            return this.unbind('mousewheel', fn);\n        }\n    });\n\n\n    function handler(event) {\n        var orgEvent   = event || window.event,\n            args       = slice.call(arguments, 1),\n            delta      = 0,\n            deltaX     = 0,\n            deltaY     = 0,\n            absDelta   = 0,\n            offsetX    = 0,\n            offsetY    = 0;\n        event = $.event.fix(orgEvent);\n        event.type = 'mousewheel';\n\n        // Old school scrollwheel delta\n        if ( 'detail'      in orgEvent ) { deltaY = orgEvent.detail * -1;      }\n        if ( 'wheelDelta'  in orgEvent ) { deltaY = orgEvent.wheelDelta;       }\n        if ( 'wheelDeltaY' in orgEvent ) { deltaY = orgEvent.wheelDeltaY;      }\n        if ( 'wheelDeltaX' in orgEvent ) { deltaX = orgEvent.wheelDeltaX * -1; }\n\n        // Firefox < 17 horizontal scrolling related to DOMMouseScroll event\n        if ( 'axis' in orgEvent && orgEvent.axis === orgEvent.HORIZONTAL_AXIS ) {\n            deltaX = deltaY * -1;\n            deltaY = 0;\n        }\n\n        // Set delta to be deltaY or deltaX if deltaY is 0 for backwards compatabilitiy\n        delta = deltaY === 0 ? deltaX : deltaY;\n\n        // New school wheel delta (wheel event)\n        if ( 'deltaY' in orgEvent ) {\n            deltaY = orgEvent.deltaY * -1;\n            delta  = deltaY;\n        }\n        if ( 'deltaX' in orgEvent ) {\n            deltaX = orgEvent.deltaX;\n            if ( deltaY === 0 ) { delta  = deltaX * -1; }\n        }\n\n        // No change actually happened, no reason to go any further\n        if ( deltaY === 0 && deltaX === 0 ) { return; }\n\n        // Need to convert lines and pages to pixels if we aren't already in pixels\n        // There are three delta modes:\n        //   * deltaMode 0 is by pixels, nothing to do\n        //   * deltaMode 1 is by lines\n        //   * deltaMode 2 is by pages\n        if ( orgEvent.deltaMode === 1 ) {\n            var lineHeight = $.data(this, 'mousewheel-line-height');\n            delta  *= lineHeight;\n            deltaY *= lineHeight;\n            deltaX *= lineHeight;\n        } else if ( orgEvent.deltaMode === 2 ) {\n            var pageHeight = $.data(this, 'mousewheel-page-height');\n            delta  *= pageHeight;\n            deltaY *= pageHeight;\n            deltaX *= pageHeight;\n        }\n\n        // Store lowest absolute delta to normalize the delta values\n        absDelta = Math.max( Math.abs(deltaY), Math.abs(deltaX) );\n\n        if ( !lowestDelta || absDelta < lowestDelta ) {\n            lowestDelta = absDelta;\n\n            // Adjust older deltas if necessary\n            if ( shouldAdjustOldDeltas(orgEvent, absDelta) ) {\n                lowestDelta /= 40;\n            }\n        }\n\n        // Adjust older deltas if necessary\n        if ( shouldAdjustOldDeltas(orgEvent, absDelta) ) {\n            // Divide all the things by 40!\n            delta  /= 40;\n            deltaX /= 40;\n            deltaY /= 40;\n        }\n\n        // Get a whole, normalized value for the deltas\n        delta  = Math[ delta  >= 1 ? 'floor' : 'ceil' ](delta  / lowestDelta);\n        deltaX = Math[ deltaX >= 1 ? 'floor' : 'ceil' ](deltaX / lowestDelta);\n        deltaY = Math[ deltaY >= 1 ? 'floor' : 'ceil' ](deltaY / lowestDelta);\n\n        // Normalise offsetX and offsetY properties\n        if ( special.settings.normalizeOffset && this.getBoundingClientRect ) {\n            var boundingRect = this.getBoundingClientRect();\n            offsetX = event.clientX - boundingRect.left;\n            offsetY = event.clientY - boundingRect.top;\n        }\n\n        // Add information to the event object\n        event.deltaX = deltaX;\n        event.deltaY = deltaY;\n        event.deltaFactor = lowestDelta;\n        event.offsetX = offsetX;\n        event.offsetY = offsetY;\n        // Go ahead and set deltaMode to 0 since we converted to pixels\n        // Although this is a little odd since we overwrite the deltaX/Y\n        // properties with normalized deltas.\n        event.deltaMode = 0;\n\n        // Add event and delta to the front of the arguments\n        args.unshift(event, delta, deltaX, deltaY);\n\n        // Clearout lowestDelta after sometime to better\n        // handle multiple device types that give different\n        // a different lowestDelta\n        // Ex: trackpad = 3 and mouse wheel = 120\n        if (nullLowestDeltaTimeout) { clearTimeout(nullLowestDeltaTimeout); }\n        nullLowestDeltaTimeout = setTimeout(nullLowestDelta, 200);\n\n        return ($.event.dispatch || $.event.handle).apply(this, args);\n    }\n\n    function nullLowestDelta() {\n        lowestDelta = null;\n    }\n\n    function shouldAdjustOldDeltas(orgEvent, absDelta) {\n        // If this is an older event and the delta is divisable by 120,\n        // then we are assuming that the browser is treating this as an\n        // older mouse wheel event and that we should divide the deltas\n        // by 40 to try and get a more usable deltaFactor.\n        // Side note, this actually impacts the reported scroll distance\n        // in older browsers and can cause scrolling to be slower than native.\n        // Turn this off by setting $.event.special.mousewheel.settings.adjustOldDeltas to false.\n        return special.settings.adjustOldDeltas && orgEvent.type === 'mousewheel' && absDelta % 120 === 0;\n    }\n\n}));\n","/**\n * bxSlider v4.2.5\n * Copyright 2013-2015 Steven Wanderski\n * Written while drinking Belgian ales and listening to jazz\n\n * Licensed under MIT (http://opensource.org/licenses/MIT)\n */\n\n;(function($) {\n\n  var defaults = {\n\n    // GENERAL\n    mode: 'horizontal',\n    slideSelector: '',\n    infiniteLoop: true,\n    hideControlOnEnd: false,\n    speed: 500,\n    easing: null,\n    slideMargin: 0,\n    startSlide: 0,\n    randomStart: false,\n    captions: false,\n    ticker: false,\n    tickerHover: false,\n    adaptiveHeight: false,\n    adaptiveHeightSpeed: 500,\n    video: false,\n    useCSS: true,\n    preloadImages: 'visible',\n    responsive: true,\n    slideZIndex: 50,\n    wrapperClass: 'bx-wrapper',\n\n    // TOUCH\n    touchEnabled: true,\n    swipeThreshold: 50,\n    oneToOneTouch: true,\n    preventDefaultSwipeX: true,\n    preventDefaultSwipeY: false,\n\n    // ACCESSIBILITY\n    ariaLive: true,\n    ariaHidden: true,\n\n    // KEYBOARD\n    keyboardEnabled: false,\n\n    // PAGER\n    pager: true,\n    pagerType: 'full',\n    pagerShortSeparator: ' / ',\n    pagerSelector: null,\n    buildPager: null,\n    pagerCustom: null,\n\n    // CONTROLS\n    controls: true,\n    nextText: 'Next',\n    prevText: 'Prev',\n    nextSelector: null,\n    prevSelector: null,\n    autoControls: false,\n    startText: 'Start',\n    stopText: 'Stop',\n    autoControlsCombine: false,\n    autoControlsSelector: null,\n\n    // AUTO\n    auto: false,\n    pause: 4000,\n    autoStart: true,\n    autoDirection: 'next',\n    stopAutoOnClick: false,\n    autoHover: false,\n    autoDelay: 0,\n    autoSlideForOnePage: false,\n\n    // CAROUSEL\n    minSlides: 1,\n    maxSlides: 1,\n    moveSlides: 0,\n    slideWidth: 0,\n    shrinkItems: false,\n\n    // CALLBACKS\n    onSliderLoad: function() { return true; },\n    onSlideBefore: function() { return true; },\n    onSlideAfter: function() { return true; },\n    onSlideNext: function() { return true; },\n    onSlidePrev: function() { return true; },\n    onSliderResize: function() { return true; }\n  };\n\n  $.fn.bxSlider = function(options) {\n\n    if (this.length === 0) {\n      return this;\n    }\n\n    // support multiple elements\n    if (this.length > 1) {\n      this.each(function() {\n        $(this).bxSlider(options);\n      });\n      return this;\n    }\n\n    // create a namespace to be used throughout the plugin\n    var slider = {},\n    // set a reference to our slider element\n    el = this,\n    // get the original window dimens (thanks a lot IE)\n    windowWidth = $(window).width(),\n    windowHeight = $(window).height();\n\n    // Return if slider is already initialized\n    if ($(el).data('bxSlider')) { return; }\n\n    /**\n     * ===================================================================================\n     * = PRIVATE FUNCTIONS\n     * ===================================================================================\n     */\n\n    /**\n     * Initializes namespace settings to be used throughout plugin\n     */\n    var init = function() {\n      // Return if slider is already initialized\n      if ($(el).data('bxSlider')) { return; }\n      // merge user-supplied options with the defaults\n      slider.settings = $.extend({}, defaults, options);\n      // parse slideWidth setting\n      slider.settings.slideWidth = parseInt(slider.settings.slideWidth);\n      // store the original children\n      slider.children = el.children(slider.settings.slideSelector);\n      // check if actual number of slides is less than minSlides / maxSlides\n      if (slider.children.length < slider.settings.minSlides) { slider.settings.minSlides = slider.children.length; }\n      if (slider.children.length < slider.settings.maxSlides) { slider.settings.maxSlides = slider.children.length; }\n      // if random start, set the startSlide setting to random number\n      if (slider.settings.randomStart) { slider.settings.startSlide = Math.floor(Math.random() * slider.children.length); }\n      // store active slide information\n      slider.active = { index: slider.settings.startSlide };\n      // store if the slider is in carousel mode (displaying / moving multiple slides)\n      slider.carousel = slider.settings.minSlides > 1 || slider.settings.maxSlides > 1 ? true : false;\n      // if carousel, force preloadImages = 'all'\n      if (slider.carousel) { slider.settings.preloadImages = 'all'; }\n      // calculate the min / max width thresholds based on min / max number of slides\n      // used to setup and update carousel slides dimensions\n      slider.minThreshold = (slider.settings.minSlides * slider.settings.slideWidth) + ((slider.settings.minSlides - 1) * slider.settings.slideMargin);\n      slider.maxThreshold = (slider.settings.maxSlides * slider.settings.slideWidth) + ((slider.settings.maxSlides - 1) * slider.settings.slideMargin);\n      // store the current state of the slider (if currently animating, working is true)\n      slider.working = false;\n      // initialize the controls object\n      slider.controls = {};\n      // initialize an auto interval\n      slider.interval = null;\n      // determine which property to use for transitions\n      slider.animProp = slider.settings.mode === 'vertical' ? 'top' : 'left';\n      // determine if hardware acceleration can be used\n      slider.usingCSS = slider.settings.useCSS && slider.settings.mode !== 'fade' && (function() {\n        // create our test div element\n        var div = document.createElement('div'),\n        // css transition properties\n        props = ['WebkitPerspective', 'MozPerspective', 'OPerspective', 'msPerspective'];\n        // test for each property\n        for (var i = 0; i < props.length; i++) {\n          if (div.style[props[i]] !== undefined) {\n            slider.cssPrefix = props[i].replace('Perspective', '').toLowerCase();\n            slider.animProp = '-' + slider.cssPrefix + '-transform';\n            return true;\n          }\n        }\n        return false;\n      }());\n      // if vertical mode always make maxSlides and minSlides equal\n      if (slider.settings.mode === 'vertical') { slider.settings.maxSlides = slider.settings.minSlides; }\n      // save original style data\n      el.data('origStyle', el.attr('style'));\n      el.children(slider.settings.slideSelector).each(function() {\n        $(this).data('origStyle', $(this).attr('style'));\n      });\n\n      // perform all DOM / CSS modifications\n      setup();\n    };\n\n    /**\n     * Performs all DOM and CSS modifications\n     */\n    var setup = function() {\n      var preloadSelector = slider.children.eq(slider.settings.startSlide); // set the default preload selector (visible)\n\n      // wrap el in a wrapper\n      el.wrap('<div class=\"' + slider.settings.wrapperClass + '\"><div class=\"bx-viewport\"></div></div>');\n      // store a namespace reference to .bx-viewport\n      slider.viewport = el.parent();\n\n      // add aria-live if the setting is enabled and ticker mode is disabled\n      if (slider.settings.ariaLive && !slider.settings.ticker) {\n        slider.viewport.attr('aria-live', 'polite');\n      }\n      // add a loading div to display while images are loading\n      slider.loader = $('<div class=\"bx-loading\" />');\n      slider.viewport.prepend(slider.loader);\n      // set el to a massive width, to hold any needed slides\n      // also strip any margin and padding from el\n      el.css({\n        width: slider.settings.mode === 'horizontal' ? (slider.children.length * 1000 + 215) + '%' : 'auto',\n        position: 'relative'\n      });\n      // if using CSS, add the easing property\n      if (slider.usingCSS && slider.settings.easing) {\n        el.css('-' + slider.cssPrefix + '-transition-timing-function', slider.settings.easing);\n      // if not using CSS and no easing value was supplied, use the default JS animation easing (swing)\n      } else if (!slider.settings.easing) {\n        slider.settings.easing = 'swing';\n      }\n      // make modifications to the viewport (.bx-viewport)\n      slider.viewport.css({\n        width: '100%',\n        overflow: 'hidden',\n        position: 'relative'\n      });\n      slider.viewport.parent().css({\n        maxWidth: getViewportMaxWidth()\n      });\n      // make modification to the wrapper (.bx-wrapper)\n      if (!slider.settings.pager && !slider.settings.controls) {\n        slider.viewport.parent().css({\n          margin: '0 auto 0px'\n        });\n      }\n      // apply css to all slider children\n      slider.children.css({\n        float: slider.settings.mode === 'horizontal' ? 'left' : 'none',\n        listStyle: 'none',\n        position: 'relative'\n      });\n      // apply the calculated width after the float is applied to prevent scrollbar interference\n      slider.children.css('width', getSlideWidth());\n      // if slideMargin is supplied, add the css\n      if (slider.settings.mode === 'horizontal' && slider.settings.slideMargin > 0) { slider.children.css('marginRight', slider.settings.slideMargin); }\n      if (slider.settings.mode === 'vertical' && slider.settings.slideMargin > 0) { slider.children.css('marginBottom', slider.settings.slideMargin); }\n      // if \"fade\" mode, add positioning and z-index CSS\n      if (slider.settings.mode === 'fade') {\n        slider.children.css({\n          position: 'absolute',\n          zIndex: 0,\n          display: 'none'\n        });\n        // prepare the z-index on the showing element\n        slider.children.eq(slider.settings.startSlide).css({zIndex: slider.settings.slideZIndex, display: 'block'});\n      }\n      // create an element to contain all slider controls (pager, start / stop, etc)\n      slider.controls.el = $('<div class=\"bx-controls\" />');\n      // if captions are requested, add them\n      if (slider.settings.captions) { appendCaptions(); }\n      // check if startSlide is last slide\n      slider.active.last = slider.settings.startSlide === getPagerQty() - 1;\n      // if video is true, set up the fitVids plugin\n      if (slider.settings.video) { el.fitVids(); }\n      if (slider.settings.preloadImages === 'all' || slider.settings.ticker) { preloadSelector = slider.children; }\n      // only check for control addition if not in \"ticker\" mode\n      if (!slider.settings.ticker) {\n        // if controls are requested, add them\n        if (slider.settings.controls) { appendControls(); }\n        // if auto is true, and auto controls are requested, add them\n        if (slider.settings.auto && slider.settings.autoControls) { appendControlsAuto(); }\n        // if pager is requested, add it\n        if (slider.settings.pager) { appendPager(); }\n        // if any control option is requested, add the controls wrapper\n        if (slider.settings.controls || slider.settings.autoControls || slider.settings.pager) { slider.viewport.after(slider.controls.el); }\n      // if ticker mode, do not allow a pager\n      } else {\n        slider.settings.pager = false;\n      }\n      loadElements(preloadSelector, start);\n    };\n\n    var loadElements = function(selector, callback) {\n      var total = selector.find('img:not([src=\"\"]), iframe').length,\n      count = 0;\n      if (total === 0) {\n        callback();\n        return;\n      }\n      selector.find('img:not([src=\"\"]), iframe').each(function() {\n        $(this).one('load error', function() {\n          if (++count === total) { callback(); }\n        }).each(function() {\n          if (this.complete) { $(this).load(); }\n        });\n      });\n    };\n\n    /**\n     * Start the slider\n     */\n    var start = function() {\n      // if infinite loop, prepare additional slides\n      if (slider.settings.infiniteLoop && slider.settings.mode !== 'fade' && !slider.settings.ticker) {\n        var slice    = slider.settings.mode === 'vertical' ? slider.settings.minSlides : slider.settings.maxSlides,\n        sliceAppend  = slider.children.slice(0, slice).clone(true).addClass('bx-clone'),\n        slicePrepend = slider.children.slice(-slice).clone(true).addClass('bx-clone');\n        if (slider.settings.ariaHidden) {\n          sliceAppend.attr('aria-hidden', true);\n          slicePrepend.attr('aria-hidden', true);\n        }\n        el.append(sliceAppend).prepend(slicePrepend);\n      }\n      // remove the loading DOM element\n      slider.loader.remove();\n      // set the left / top position of \"el\"\n      setSlidePosition();\n      // if \"vertical\" mode, always use adaptiveHeight to prevent odd behavior\n      if (slider.settings.mode === 'vertical') { slider.settings.adaptiveHeight = true; }\n      // set the viewport height\n      slider.viewport.height(getViewportHeight());\n      // make sure everything is positioned just right (same as a window resize)\n      el.redrawSlider();\n      // onSliderLoad callback\n      slider.settings.onSliderLoad.call(el, slider.active.index);\n      // slider has been fully initialized\n      slider.initialized = true;\n      // bind the resize call to the window\n      if (slider.settings.responsive) { $(window).bind('resize', resizeWindow); }\n      // if auto is true and has more than 1 page, start the show\n      if (slider.settings.auto && slider.settings.autoStart && (getPagerQty() > 1 || slider.settings.autoSlideForOnePage)) { initAuto(); }\n      // if ticker is true, start the ticker\n      if (slider.settings.ticker) { initTicker(); }\n      // if pager is requested, make the appropriate pager link active\n      if (slider.settings.pager) { updatePagerActive(slider.settings.startSlide); }\n      // check for any updates to the controls (like hideControlOnEnd updates)\n      if (slider.settings.controls) { updateDirectionControls(); }\n      // if touchEnabled is true, setup the touch events\n      if (slider.settings.touchEnabled && !slider.settings.ticker) { initTouch(); }\n      // if keyboardEnabled is true, setup the keyboard events\n      if (slider.settings.keyboardEnabled && !slider.settings.ticker) {\n        $(document).keydown(keyPress);\n      }\n    };\n\n    /**\n     * Returns the calculated height of the viewport, used to determine either adaptiveHeight or the maxHeight value\n     */\n    var getViewportHeight = function() {\n      var height = 0;\n      // first determine which children (slides) should be used in our height calculation\n      var children = $();\n      // if mode is not \"vertical\" and adaptiveHeight is false, include all children\n      if (slider.settings.mode !== 'vertical' && !slider.settings.adaptiveHeight) {\n        children = slider.children;\n      } else {\n        // if not carousel, return the single active child\n        if (!slider.carousel) {\n          children = slider.children.eq(slider.active.index);\n        // if carousel, return a slice of children\n        } else {\n          // get the individual slide index\n          var currentIndex = slider.settings.moveSlides === 1 ? slider.active.index : slider.active.index * getMoveBy();\n          // add the current slide to the children\n          children = slider.children.eq(currentIndex);\n          // cycle through the remaining \"showing\" slides\n          for (i = 1; i <= slider.settings.maxSlides - 1; i++) {\n            // if looped back to the start\n            if (currentIndex + i >= slider.children.length) {\n              children = children.add(slider.children.eq(i - 1));\n            } else {\n              children = children.add(slider.children.eq(currentIndex + i));\n            }\n          }\n        }\n      }\n      // if \"vertical\" mode, calculate the sum of the heights of the children\n      if (slider.settings.mode === 'vertical') {\n        children.each(function(index) {\n          height += $(this).outerHeight();\n        });\n        // add user-supplied margins\n        if (slider.settings.slideMargin > 0) {\n          height += slider.settings.slideMargin * (slider.settings.minSlides - 1);\n        }\n      // if not \"vertical\" mode, calculate the max height of the children\n      } else {\n        height = Math.max.apply(Math, children.map(function() {\n          return $(this).outerHeight(false);\n        }).get());\n      }\n\n      if (slider.viewport.css('box-sizing') === 'border-box') {\n        height += parseFloat(slider.viewport.css('padding-top')) + parseFloat(slider.viewport.css('padding-bottom')) +\n              parseFloat(slider.viewport.css('border-top-width')) + parseFloat(slider.viewport.css('border-bottom-width'));\n      } else if (slider.viewport.css('box-sizing') === 'padding-box') {\n        height += parseFloat(slider.viewport.css('padding-top')) + parseFloat(slider.viewport.css('padding-bottom'));\n      }\n\n      return height;\n    };\n\n    /**\n     * Returns the calculated width to be used for the outer wrapper / viewport\n     */\n    var getViewportMaxWidth = function() {\n      var width = '100%';\n      if (slider.settings.slideWidth > 0) {\n        if (slider.settings.mode === 'horizontal') {\n          width = (slider.settings.maxSlides * slider.settings.slideWidth) + ((slider.settings.maxSlides - 1) * slider.settings.slideMargin);\n        } else {\n          width = slider.settings.slideWidth;\n        }\n      }\n      return width;\n    };\n\n    /**\n     * Returns the calculated width to be applied to each slide\n     */\n    var getSlideWidth = function() {\n      var newElWidth = slider.settings.slideWidth, // start with any user-supplied slide width\n      wrapWidth      = slider.viewport.width();    // get the current viewport width\n      // if slide width was not supplied, or is larger than the viewport use the viewport width\n      if (slider.settings.slideWidth === 0 ||\n        (slider.settings.slideWidth > wrapWidth && !slider.carousel) ||\n        slider.settings.mode === 'vertical') {\n        newElWidth = wrapWidth;\n      // if carousel, use the thresholds to determine the width\n      } else if (slider.settings.maxSlides > 1 && slider.settings.mode === 'horizontal') {\n        if (wrapWidth > slider.maxThreshold) {\n          return newElWidth;\n        } else if (wrapWidth < slider.minThreshold) {\n          newElWidth = (wrapWidth - (slider.settings.slideMargin * (slider.settings.minSlides - 1))) / slider.settings.minSlides;\n        } else if (slider.settings.shrinkItems) {\n          newElWidth = Math.floor((wrapWidth + slider.settings.slideMargin) / (Math.ceil((wrapWidth + slider.settings.slideMargin) / (newElWidth + slider.settings.slideMargin))) - slider.settings.slideMargin);\n        }\n      }\n      return newElWidth;\n    };\n\n    /**\n     * Returns the number of slides currently visible in the viewport (includes partially visible slides)\n     */\n    var getNumberSlidesShowing = function() {\n      var slidesShowing = 1,\n      childWidth = null;\n      if (slider.settings.mode === 'horizontal' && slider.settings.slideWidth > 0) {\n        // if viewport is smaller than minThreshold, return minSlides\n        if (slider.viewport.width() < slider.minThreshold) {\n          slidesShowing = slider.settings.minSlides;\n        // if viewport is larger than maxThreshold, return maxSlides\n        } else if (slider.viewport.width() > slider.maxThreshold) {\n          slidesShowing = slider.settings.maxSlides;\n        // if viewport is between min / max thresholds, divide viewport width by first child width\n        } else {\n          childWidth = slider.children.first().width() + slider.settings.slideMargin;\n          slidesShowing = Math.floor((slider.viewport.width() +\n            slider.settings.slideMargin) / childWidth);\n        }\n      // if \"vertical\" mode, slides showing will always be minSlides\n      } else if (slider.settings.mode === 'vertical') {\n        slidesShowing = slider.settings.minSlides;\n      }\n      return slidesShowing;\n    };\n\n    /**\n     * Returns the number of pages (one full viewport of slides is one \"page\")\n     */\n    var getPagerQty = function() {\n      var pagerQty = 0,\n      breakPoint = 0,\n      counter = 0;\n      // if moveSlides is specified by the user\n      if (slider.settings.moveSlides > 0) {\n        if (slider.settings.infiniteLoop) {\n          pagerQty = Math.ceil(slider.children.length / getMoveBy());\n        } else {\n          // when breakpoint goes above children length, counter is the number of pages\n          while (breakPoint < slider.children.length) {\n            ++pagerQty;\n            breakPoint = counter + getNumberSlidesShowing();\n            counter += slider.settings.moveSlides <= getNumberSlidesShowing() ? slider.settings.moveSlides : getNumberSlidesShowing();\n          }\n        }\n      // if moveSlides is 0 (auto) divide children length by sides showing, then round up\n      } else {\n        pagerQty = Math.ceil(slider.children.length / getNumberSlidesShowing());\n      }\n      return pagerQty;\n    };\n\n    /**\n     * Returns the number of individual slides by which to shift the slider\n     */\n    var getMoveBy = function() {\n      // if moveSlides was set by the user and moveSlides is less than number of slides showing\n      if (slider.settings.moveSlides > 0 && slider.settings.moveSlides <= getNumberSlidesShowing()) {\n        return slider.settings.moveSlides;\n      }\n      // if moveSlides is 0 (auto)\n      return getNumberSlidesShowing();\n    };\n\n    /**\n     * Sets the slider's (el) left or top position\n     */\n    var setSlidePosition = function() {\n      var position, lastChild, lastShowingIndex;\n      // if last slide, not infinite loop, and number of children is larger than specified maxSlides\n      if (slider.children.length > slider.settings.maxSlides && slider.active.last && !slider.settings.infiniteLoop) {\n        if (slider.settings.mode === 'horizontal') {\n          // get the last child's position\n          lastChild = slider.children.last();\n          position = lastChild.position();\n          // set the left position\n          setPositionProperty(-(position.left - (slider.viewport.width() - lastChild.outerWidth())), 'reset', 0);\n        } else if (slider.settings.mode === 'vertical') {\n          // get the last showing index's position\n          lastShowingIndex = slider.children.length - slider.settings.minSlides;\n          position = slider.children.eq(lastShowingIndex).position();\n          // set the top position\n          setPositionProperty(-position.top, 'reset', 0);\n        }\n      // if not last slide\n      } else {\n        // get the position of the first showing slide\n        position = slider.children.eq(slider.active.index * getMoveBy()).position();\n        // check for last slide\n        if (slider.active.index === getPagerQty() - 1) { slider.active.last = true; }\n        // set the respective position\n        if (position !== undefined) {\n          if (slider.settings.mode === 'horizontal') { setPositionProperty(-position.left, 'reset', 0); }\n          else if (slider.settings.mode === 'vertical') { setPositionProperty(-position.top, 'reset', 0); }\n        }\n      }\n    };\n\n    /**\n     * Sets the el's animating property position (which in turn will sometimes animate el).\n     * If using CSS, sets the transform property. If not using CSS, sets the top / left property.\n     *\n     * @param value (int)\n     *  - the animating property's value\n     *\n     * @param type (string) 'slide', 'reset', 'ticker'\n     *  - the type of instance for which the function is being\n     *\n     * @param duration (int)\n     *  - the amount of time (in ms) the transition should occupy\n     *\n     * @param params (array) optional\n     *  - an optional parameter containing any variables that need to be passed in\n     */\n    var setPositionProperty = function(value, type, duration, params) {\n      var animateObj, propValue;\n      // use CSS transform\n      if (slider.usingCSS) {\n        // determine the translate3d value\n        propValue = slider.settings.mode === 'vertical' ? 'translate3d(0, ' + value + 'px, 0)' : 'translate3d(' + value + 'px, 0, 0)';\n        // add the CSS transition-duration\n        el.css('-' + slider.cssPrefix + '-transition-duration', duration / 1000 + 's');\n        if (type === 'slide') {\n          // set the property value\n          el.css(slider.animProp, propValue);\n          if (duration !== 0) {\n            // bind a callback method - executes when CSS transition completes\n            el.bind('transitionend webkitTransitionEnd oTransitionEnd MSTransitionEnd', function(e) {\n              //make sure it's the correct one\n              if (!$(e.target).is(el)) { return; }\n              // unbind the callback\n              el.unbind('transitionend webkitTransitionEnd oTransitionEnd MSTransitionEnd');\n              updateAfterSlideTransition();\n            });\n          } else { //duration = 0\n            updateAfterSlideTransition();\n          }\n        } else if (type === 'reset') {\n          el.css(slider.animProp, propValue);\n        } else if (type === 'ticker') {\n          // make the transition use 'linear'\n          el.css('-' + slider.cssPrefix + '-transition-timing-function', 'linear');\n          el.css(slider.animProp, propValue);\n          if (duration !== 0) {\n            el.bind('transitionend webkitTransitionEnd oTransitionEnd MSTransitionEnd', function(e) {\n              //make sure it's the correct one\n              if (!$(e.target).is(el)) { return; }\n              // unbind the callback\n              el.unbind('transitionend webkitTransitionEnd oTransitionEnd MSTransitionEnd');\n              // reset the position\n              setPositionProperty(params.resetValue, 'reset', 0);\n              // start the loop again\n              tickerLoop();\n            });\n          } else { //duration = 0\n            setPositionProperty(params.resetValue, 'reset', 0);\n            tickerLoop();\n          }\n        }\n      // use JS animate\n      } else {\n        animateObj = {};\n        animateObj[slider.animProp] = value;\n        if (type === 'slide') {\n          el.animate(animateObj, duration, slider.settings.easing, function() {\n            updateAfterSlideTransition();\n          });\n        } else if (type === 'reset') {\n          el.css(slider.animProp, value);\n        } else if (type === 'ticker') {\n          el.animate(animateObj, duration, 'linear', function() {\n            setPositionProperty(params.resetValue, 'reset', 0);\n            // run the recursive loop after animation\n            tickerLoop();\n          });\n        }\n      }\n    };\n\n    /**\n     * Populates the pager with proper amount of pages\n     */\n    var populatePager = function() {\n      var pagerHtml = '',\n      linkContent = '',\n      pagerQty = getPagerQty();\n      // loop through each pager item\n      for (var i = 0; i < pagerQty; i++) {\n        linkContent = '';\n        // if a buildPager function is supplied, use it to get pager link value, else use index + 1\n        if (slider.settings.buildPager && $.isFunction(slider.settings.buildPager) || slider.settings.pagerCustom) {\n          linkContent = slider.settings.buildPager(i);\n          slider.pagerEl.addClass('bx-custom-pager');\n        } else {\n          linkContent = i + 1;\n          slider.pagerEl.addClass('bx-default-pager');\n        }\n        // var linkContent = slider.settings.buildPager && $.isFunction(slider.settings.buildPager) ? slider.settings.buildPager(i) : i + 1;\n        // add the markup to the string\n        pagerHtml += '<div class=\"bx-pager-item\"><a href=\"\" data-slide-index=\"' + i + '\" class=\"bx-pager-link\">' + linkContent + '</a></div>';\n      }\n      // populate the pager element with pager links\n      slider.pagerEl.html(pagerHtml);\n    };\n\n    /**\n     * Appends the pager to the controls element\n     */\n    var appendPager = function() {\n      if (!slider.settings.pagerCustom) {\n        // create the pager DOM element\n        slider.pagerEl = $('<div class=\"bx-pager\" />');\n        // if a pager selector was supplied, populate it with the pager\n        if (slider.settings.pagerSelector) {\n          $(slider.settings.pagerSelector).html(slider.pagerEl);\n        // if no pager selector was supplied, add it after the wrapper\n        } else {\n          slider.controls.el.addClass('bx-has-pager').append(slider.pagerEl);\n        }\n        // populate the pager\n        populatePager();\n      } else {\n        slider.pagerEl = $(slider.settings.pagerCustom);\n      }\n      // assign the pager click binding\n      slider.pagerEl.on('click touchend', 'a', clickPagerBind);\n    };\n\n    /**\n     * Appends prev / next controls to the controls element\n     */\n    var appendControls = function() {\n      slider.controls.next = $('<a class=\"bx-next\" href=\"\">' + slider.settings.nextText + '</a>');\n      slider.controls.prev = $('<a class=\"bx-prev\" href=\"\">' + slider.settings.prevText + '</a>');\n      // bind click actions to the controls\n      slider.controls.next.bind('click touchend', clickNextBind);\n      slider.controls.prev.bind('click touchend', clickPrevBind);\n      // if nextSelector was supplied, populate it\n      if (slider.settings.nextSelector) {\n        $(slider.settings.nextSelector).append(slider.controls.next);\n      }\n      // if prevSelector was supplied, populate it\n      if (slider.settings.prevSelector) {\n        $(slider.settings.prevSelector).append(slider.controls.prev);\n      }\n      // if no custom selectors were supplied\n      if (!slider.settings.nextSelector && !slider.settings.prevSelector) {\n        // add the controls to the DOM\n        slider.controls.directionEl = $('<div class=\"bx-controls-direction\" />');\n        // add the control elements to the directionEl\n        slider.controls.directionEl.append(slider.controls.prev).append(slider.controls.next);\n        // slider.viewport.append(slider.controls.directionEl);\n        slider.controls.el.addClass('bx-has-controls-direction').append(slider.controls.directionEl);\n      }\n    };\n\n    /**\n     * Appends start / stop auto controls to the controls element\n     */\n    var appendControlsAuto = function() {\n      slider.controls.start = $('<div class=\"bx-controls-auto-item\"><a class=\"bx-start\" href=\"\">' + slider.settings.startText + '</a></div>');\n      slider.controls.stop = $('<div class=\"bx-controls-auto-item\"><a class=\"bx-stop\" href=\"\">' + slider.settings.stopText + '</a></div>');\n      // add the controls to the DOM\n      slider.controls.autoEl = $('<div class=\"bx-controls-auto\" />');\n      // bind click actions to the controls\n      slider.controls.autoEl.on('click', '.bx-start', clickStartBind);\n      slider.controls.autoEl.on('click', '.bx-stop', clickStopBind);\n      // if autoControlsCombine, insert only the \"start\" control\n      if (slider.settings.autoControlsCombine) {\n        slider.controls.autoEl.append(slider.controls.start);\n      // if autoControlsCombine is false, insert both controls\n      } else {\n        slider.controls.autoEl.append(slider.controls.start).append(slider.controls.stop);\n      }\n      // if auto controls selector was supplied, populate it with the controls\n      if (slider.settings.autoControlsSelector) {\n        $(slider.settings.autoControlsSelector).html(slider.controls.autoEl);\n      // if auto controls selector was not supplied, add it after the wrapper\n      } else {\n        slider.controls.el.addClass('bx-has-controls-auto').append(slider.controls.autoEl);\n      }\n      // update the auto controls\n      updateAutoControls(slider.settings.autoStart ? 'stop' : 'start');\n    };\n\n    /**\n     * Appends image captions to the DOM\n     */\n    var appendCaptions = function() {\n      // cycle through each child\n      slider.children.each(function(index) {\n        // get the image title attribute\n        var title = $(this).find('img:first').attr('title');\n        // append the caption\n        if (title !== undefined && ('' + title).length) {\n          $(this).append('<div class=\"bx-caption\"><span>' + title + '</span></div>');\n        }\n      });\n    };\n\n    /**\n     * Click next binding\n     *\n     * @param e (event)\n     *  - DOM event object\n     */\n    var clickNextBind = function(e) {\n      e.preventDefault();\n      if (slider.controls.el.hasClass('disabled')) { return; }\n      // if auto show is running, stop it\n      if (slider.settings.auto && slider.settings.stopAutoOnClick) { el.stopAuto(); }\n      el.goToNextSlide();\n    };\n\n    /**\n     * Click prev binding\n     *\n     * @param e (event)\n     *  - DOM event object\n     */\n    var clickPrevBind = function(e) {\n      e.preventDefault();\n      if (slider.controls.el.hasClass('disabled')) { return; }\n      // if auto show is running, stop it\n      if (slider.settings.auto && slider.settings.stopAutoOnClick) { el.stopAuto(); }\n      el.goToPrevSlide();\n    };\n\n    /**\n     * Click start binding\n     *\n     * @param e (event)\n     *  - DOM event object\n     */\n    var clickStartBind = function(e) {\n      el.startAuto();\n      e.preventDefault();\n    };\n\n    /**\n     * Click stop binding\n     *\n     * @param e (event)\n     *  - DOM event object\n     */\n    var clickStopBind = function(e) {\n      el.stopAuto();\n      e.preventDefault();\n    };\n\n    /**\n     * Click pager binding\n     *\n     * @param e (event)\n     *  - DOM event object\n     */\n    var clickPagerBind = function(e) {\n      var pagerLink, pagerIndex;\n      e.preventDefault();\n      if (slider.controls.el.hasClass('disabled')) {\n        return;\n      }\n      // if auto show is running, stop it\n      if (slider.settings.auto  && slider.settings.stopAutoOnClick) { el.stopAuto(); }\n      pagerLink = $(e.currentTarget);\n      if (pagerLink.attr('data-slide-index') !== undefined) {\n        pagerIndex = parseInt(pagerLink.attr('data-slide-index'));\n        // if clicked pager link is not active, continue with the goToSlide call\n        if (pagerIndex !== slider.active.index) { el.goToSlide(pagerIndex); }\n      }\n    };\n\n    /**\n     * Updates the pager links with an active class\n     *\n     * @param slideIndex (int)\n     *  - index of slide to make active\n     */\n    var updatePagerActive = function(slideIndex) {\n      // if \"short\" pager type\n      var len = slider.children.length; // nb of children\n      if (slider.settings.pagerType === 'short') {\n        if (slider.settings.maxSlides > 1) {\n          len = Math.ceil(slider.children.length / slider.settings.maxSlides);\n        }\n        slider.pagerEl.html((slideIndex + 1) + slider.settings.pagerShortSeparator + len);\n        return;\n      }\n      // remove all pager active classes\n      slider.pagerEl.find('a').removeClass('active');\n      // apply the active class for all pagers\n      slider.pagerEl.each(function(i, el) { $(el).find('a').eq(slideIndex).addClass('active'); });\n    };\n\n    /**\n     * Performs needed actions after a slide transition\n     */\n    var updateAfterSlideTransition = function() {\n      // if infinite loop is true\n      if (slider.settings.infiniteLoop) {\n        var position = '';\n        // first slide\n        if (slider.active.index === 0) {\n          // set the new position\n          position = slider.children.eq(0).position();\n        // carousel, last slide\n        } else if (slider.active.index === getPagerQty() - 1 && slider.carousel) {\n          position = slider.children.eq((getPagerQty() - 1) * getMoveBy()).position();\n        // last slide\n        } else if (slider.active.index === slider.children.length - 1) {\n          position = slider.children.eq(slider.children.length - 1).position();\n        }\n        if (position) {\n          if (slider.settings.mode === 'horizontal') { setPositionProperty(-position.left, 'reset', 0); }\n          else if (slider.settings.mode === 'vertical') { setPositionProperty(-position.top, 'reset', 0); }\n        }\n      }\n      // declare that the transition is complete\n      slider.working = false;\n      // onSlideAfter callback\n      slider.settings.onSlideAfter.call(el, slider.children.eq(slider.active.index), slider.oldIndex, slider.active.index);\n    };\n\n    /**\n     * Updates the auto controls state (either active, or combined switch)\n     *\n     * @param state (string) \"start\", \"stop\"\n     *  - the new state of the auto show\n     */\n    var updateAutoControls = function(state) {\n      // if autoControlsCombine is true, replace the current control with the new state\n      if (slider.settings.autoControlsCombine) {\n        slider.controls.autoEl.html(slider.controls[state]);\n      // if autoControlsCombine is false, apply the \"active\" class to the appropriate control\n      } else {\n        slider.controls.autoEl.find('a').removeClass('active');\n        slider.controls.autoEl.find('a:not(.bx-' + state + ')').addClass('active');\n      }\n    };\n\n    /**\n     * Updates the direction controls (checks if either should be hidden)\n     */\n    var updateDirectionControls = function() {\n      if (getPagerQty() === 1) {\n        slider.controls.prev.addClass('disabled');\n        slider.controls.next.addClass('disabled');\n      } else if (!slider.settings.infiniteLoop && slider.settings.hideControlOnEnd) {\n        // if first slide\n        if (slider.active.index === 0) {\n          slider.controls.prev.addClass('disabled');\n          slider.controls.next.removeClass('disabled');\n        // if last slide\n        } else if (slider.active.index === getPagerQty() - 1) {\n          slider.controls.next.addClass('disabled');\n          slider.controls.prev.removeClass('disabled');\n        // if any slide in the middle\n        } else {\n          slider.controls.prev.removeClass('disabled');\n          slider.controls.next.removeClass('disabled');\n        }\n      }\n    };\n\n    /**\n     * Initializes the auto process\n     */\n    var initAuto = function() {\n      // if autoDelay was supplied, launch the auto show using a setTimeout() call\n      if (slider.settings.autoDelay > 0) {\n        var timeout = setTimeout(el.startAuto, slider.settings.autoDelay);\n      // if autoDelay was not supplied, start the auto show normally\n      } else {\n        el.startAuto();\n\n        //add focus and blur events to ensure its running if timeout gets paused\n        $(window).focus(function() {\n          el.startAuto();\n        }).blur(function() {\n          el.stopAuto();\n        });\n      }\n      // if autoHover is requested\n      if (slider.settings.autoHover) {\n        // on el hover\n        el.hover(function() {\n          // if the auto show is currently playing (has an active interval)\n          if (slider.interval) {\n            // stop the auto show and pass true argument which will prevent control update\n            el.stopAuto(true);\n            // create a new autoPaused value which will be used by the relative \"mouseout\" event\n            slider.autoPaused = true;\n          }\n        }, function() {\n          // if the autoPaused value was created be the prior \"mouseover\" event\n          if (slider.autoPaused) {\n            // start the auto show and pass true argument which will prevent control update\n            el.startAuto(true);\n            // reset the autoPaused value\n            slider.autoPaused = null;\n          }\n        });\n      }\n    };\n\n    /**\n     * Initializes the ticker process\n     */\n    var initTicker = function() {\n      var startPosition = 0,\n      position, transform, value, idx, ratio, property, newSpeed, totalDimens;\n      // if autoDirection is \"next\", append a clone of the entire slider\n      if (slider.settings.autoDirection === 'next') {\n        el.append(slider.children.clone().addClass('bx-clone'));\n      // if autoDirection is \"prev\", prepend a clone of the entire slider, and set the left position\n      } else {\n        el.prepend(slider.children.clone().addClass('bx-clone'));\n        position = slider.children.first().position();\n        startPosition = slider.settings.mode === 'horizontal' ? -position.left : -position.top;\n      }\n      setPositionProperty(startPosition, 'reset', 0);\n      // do not allow controls in ticker mode\n      slider.settings.pager = false;\n      slider.settings.controls = false;\n      slider.settings.autoControls = false;\n      // if autoHover is requested\n      if (slider.settings.tickerHover) {\n        if (slider.usingCSS) {\n          idx = slider.settings.mode === 'horizontal' ? 4 : 5;\n          slider.viewport.hover(function() {\n            transform = el.css('-' + slider.cssPrefix + '-transform');\n            value = parseFloat(transform.split(',')[idx]);\n            setPositionProperty(value, 'reset', 0);\n          }, function() {\n            totalDimens = 0;\n            slider.children.each(function(index) {\n              totalDimens += slider.settings.mode === 'horizontal' ? $(this).outerWidth(true) : $(this).outerHeight(true);\n            });\n            // calculate the speed ratio (used to determine the new speed to finish the paused animation)\n            ratio = slider.settings.speed / totalDimens;\n            // determine which property to use\n            property = slider.settings.mode === 'horizontal' ? 'left' : 'top';\n            // calculate the new speed\n            newSpeed = ratio * (totalDimens - (Math.abs(parseInt(value))));\n            tickerLoop(newSpeed);\n          });\n        } else {\n          // on el hover\n          slider.viewport.hover(function() {\n            el.stop();\n          }, function() {\n            // calculate the total width of children (used to calculate the speed ratio)\n            totalDimens = 0;\n            slider.children.each(function(index) {\n              totalDimens += slider.settings.mode === 'horizontal' ? $(this).outerWidth(true) : $(this).outerHeight(true);\n            });\n            // calculate the speed ratio (used to determine the new speed to finish the paused animation)\n            ratio = slider.settings.speed / totalDimens;\n            // determine which property to use\n            property = slider.settings.mode === 'horizontal' ? 'left' : 'top';\n            // calculate the new speed\n            newSpeed = ratio * (totalDimens - (Math.abs(parseInt(el.css(property)))));\n            tickerLoop(newSpeed);\n          });\n        }\n      }\n      // start the ticker loop\n      tickerLoop();\n    };\n\n    /**\n     * Runs a continuous loop, news ticker-style\n     */\n    var tickerLoop = function(resumeSpeed) {\n      var speed = resumeSpeed ? resumeSpeed : slider.settings.speed,\n      position = {left: 0, top: 0},\n      reset = {left: 0, top: 0},\n      animateProperty, resetValue, params;\n\n      // if \"next\" animate left position to last child, then reset left to 0\n      if (slider.settings.autoDirection === 'next') {\n        position = el.find('.bx-clone').first().position();\n      // if \"prev\" animate left position to 0, then reset left to first non-clone child\n      } else {\n        reset = slider.children.first().position();\n      }\n      animateProperty = slider.settings.mode === 'horizontal' ? -position.left : -position.top;\n      resetValue = slider.settings.mode === 'horizontal' ? -reset.left : -reset.top;\n      params = {resetValue: resetValue};\n      setPositionProperty(animateProperty, 'ticker', speed, params);\n    };\n\n    /**\n     * Check if el is on screen\n     */\n    var isOnScreen = function(el) {\n      var win = $(window),\n      viewport = {\n        top: win.scrollTop(),\n        left: win.scrollLeft()\n      },\n      bounds = el.offset();\n\n      viewport.right = viewport.left + win.width();\n      viewport.bottom = viewport.top + win.height();\n      bounds.right = bounds.left + el.outerWidth();\n      bounds.bottom = bounds.top + el.outerHeight();\n\n      return (!(viewport.right < bounds.left || viewport.left > bounds.right || viewport.bottom < bounds.top || viewport.top > bounds.bottom));\n    };\n\n    /**\n     * Initializes keyboard events\n     */\n    var keyPress = function(e) {\n      var activeElementTag = document.activeElement.tagName.toLowerCase(),\n      tagFilters = 'input|textarea',\n      p = new RegExp(activeElementTag,['i']),\n      result = p.exec(tagFilters);\n\n      if (result == null && isOnScreen(el)) {\n        if (e.keyCode === 39) {\n          clickNextBind(e);\n          return false;\n        } else if (e.keyCode === 37) {\n          clickPrevBind(e);\n          return false;\n        }\n      }\n    };\n\n    /**\n     * Initializes touch events\n     */\n    var initTouch = function() {\n      // initialize object to contain all touch values\n      slider.touch = {\n        start: {x: 0, y: 0},\n        end: {x: 0, y: 0}\n      };\n      slider.viewport.bind('touchstart MSPointerDown pointerdown', onTouchStart);\n\n      //for browsers that have implemented pointer events and fire a click after\n      //every pointerup regardless of whether pointerup is on same screen location as pointerdown or not\n      slider.viewport.on('click', '.bxslider a', function(e) {\n        if (slider.viewport.hasClass('click-disabled')) {\n          e.preventDefault();\n          slider.viewport.removeClass('click-disabled');\n        }\n      });\n    };\n\n    /**\n     * Event handler for \"touchstart\"\n     *\n     * @param e (event)\n     *  - DOM event object\n     */\n    var onTouchStart = function(e) {\n      //disable slider controls while user is interacting with slides to avoid slider freeze that happens on touch devices when a slide swipe happens immediately after interacting with slider controls\n      slider.controls.el.addClass('disabled');\n\n      if (slider.working) {\n        e.preventDefault();\n        slider.controls.el.removeClass('disabled');\n      } else {\n        // record the original position when touch starts\n        slider.touch.originalPos = el.position();\n        var orig = e.originalEvent,\n        touchPoints = (typeof orig.changedTouches !== 'undefined') ? orig.changedTouches : [orig];\n        // record the starting touch x, y coordinates\n        slider.touch.start.x = touchPoints[0].pageX;\n        slider.touch.start.y = touchPoints[0].pageY;\n\n        if (slider.viewport.get(0).setPointerCapture) {\n          slider.pointerId = orig.pointerId;\n          slider.viewport.get(0).setPointerCapture(slider.pointerId);\n        }\n        // bind a \"touchmove\" event to the viewport\n        slider.viewport.bind('touchmove MSPointerMove pointermove', onTouchMove);\n        // bind a \"touchend\" event to the viewport\n        slider.viewport.bind('touchend MSPointerUp pointerup', onTouchEnd);\n        slider.viewport.bind('MSPointerCancel pointercancel', onPointerCancel);\n      }\n    };\n\n    /**\n     * Cancel Pointer for Windows Phone\n     *\n     * @param e (event)\n     *  - DOM event object\n     */\n    var onPointerCancel = function(e) {\n      /* onPointerCancel handler is needed to deal with situations when a touchend\n      doesn't fire after a touchstart (this happens on windows phones only) */\n      setPositionProperty(slider.touch.originalPos.left, 'reset', 0);\n\n      //remove handlers\n      slider.controls.el.removeClass('disabled');\n      slider.viewport.unbind('MSPointerCancel pointercancel', onPointerCancel);\n      slider.viewport.unbind('touchmove MSPointerMove pointermove', onTouchMove);\n      slider.viewport.unbind('touchend MSPointerUp pointerup', onTouchEnd);\n      if (slider.viewport.get(0).releasePointerCapture) {\n        slider.viewport.get(0).releasePointerCapture(slider.pointerId);\n      }\n    };\n\n    /**\n     * Event handler for \"touchmove\"\n     *\n     * @param e (event)\n     *  - DOM event object\n     */\n    var onTouchMove = function(e) {\n      var orig = e.originalEvent,\n      touchPoints = (typeof orig.changedTouches !== 'undefined') ? orig.changedTouches : [orig],\n      // if scrolling on y axis, do not prevent default\n      xMovement = Math.abs(touchPoints[0].pageX - slider.touch.start.x),\n      yMovement = Math.abs(touchPoints[0].pageY - slider.touch.start.y),\n      value = 0,\n      change = 0;\n\n      // x axis swipe\n      if ((xMovement * 3) > yMovement && slider.settings.preventDefaultSwipeX) {\n        e.preventDefault();\n      // y axis swipe\n      } else if ((yMovement * 3) > xMovement && slider.settings.preventDefaultSwipeY) {\n        e.preventDefault();\n      }\n      if (slider.settings.mode !== 'fade' && slider.settings.oneToOneTouch) {\n        // if horizontal, drag along x axis\n        if (slider.settings.mode === 'horizontal') {\n          change = touchPoints[0].pageX - slider.touch.start.x;\n          value = slider.touch.originalPos.left + change;\n        // if vertical, drag along y axis\n        } else {\n          change = touchPoints[0].pageY - slider.touch.start.y;\n          value = slider.touch.originalPos.top + change;\n        }\n        setPositionProperty(value, 'reset', 0);\n      }\n    };\n\n    /**\n     * Event handler for \"touchend\"\n     *\n     * @param e (event)\n     *  - DOM event object\n     */\n    var onTouchEnd = function(e) {\n      slider.viewport.unbind('touchmove MSPointerMove pointermove', onTouchMove);\n      //enable slider controls as soon as user stops interacing with slides\n      slider.controls.el.removeClass('disabled');\n      var orig    = e.originalEvent,\n      touchPoints = (typeof orig.changedTouches !== 'undefined') ? orig.changedTouches : [orig],\n      value       = 0,\n      distance    = 0;\n      // record end x, y positions\n      slider.touch.end.x = touchPoints[0].pageX;\n      slider.touch.end.y = touchPoints[0].pageY;\n      // if fade mode, check if absolute x distance clears the threshold\n      if (slider.settings.mode === 'fade') {\n        distance = Math.abs(slider.touch.start.x - slider.touch.end.x);\n        if (distance >= slider.settings.swipeThreshold) {\n          if (slider.touch.start.x > slider.touch.end.x) {\n            el.goToNextSlide();\n          } else {\n            el.goToPrevSlide();\n          }\n          el.stopAuto();\n        }\n      // not fade mode\n      } else {\n        // calculate distance and el's animate property\n        if (slider.settings.mode === 'horizontal') {\n          distance = slider.touch.end.x - slider.touch.start.x;\n          value = slider.touch.originalPos.left;\n        } else {\n          distance = slider.touch.end.y - slider.touch.start.y;\n          value = slider.touch.originalPos.top;\n        }\n        // if not infinite loop and first / last slide, do not attempt a slide transition\n        if (!slider.settings.infiniteLoop && ((slider.active.index === 0 && distance > 0) || (slider.active.last && distance < 0))) {\n          setPositionProperty(value, 'reset', 200);\n        } else {\n          // check if distance clears threshold\n          if (Math.abs(distance) >= slider.settings.swipeThreshold) {\n            if (distance < 0) {\n              el.goToNextSlide();\n            } else {\n              el.goToPrevSlide();\n            }\n            el.stopAuto();\n          } else {\n            // el.animate(property, 200);\n            setPositionProperty(value, 'reset', 200);\n          }\n        }\n      }\n      slider.viewport.unbind('touchend MSPointerUp pointerup', onTouchEnd);\n      if (slider.viewport.get(0).releasePointerCapture) {\n        slider.viewport.get(0).releasePointerCapture(slider.pointerId);\n      }\n    };\n\n    /**\n     * Window resize event callback\n     */\n    var resizeWindow = function(e) {\n      // don't do anything if slider isn't initialized.\n      if (!slider.initialized) { return; }\n      // Delay if slider working.\n      if (slider.working) {\n        window.setTimeout(resizeWindow, 10);\n      } else {\n        // get the new window dimens (again, thank you IE)\n        var windowWidthNew = $(window).width(),\n        windowHeightNew = $(window).height();\n        // make sure that it is a true window resize\n        // *we must check this because our dinosaur friend IE fires a window resize event when certain DOM elements\n        // are resized. Can you just die already?*\n        if (windowWidth !== windowWidthNew || windowHeight !== windowHeightNew) {\n          // set the new window dimens\n          windowWidth = windowWidthNew;\n          windowHeight = windowHeightNew;\n          // update all dynamic elements\n          el.redrawSlider();\n          // Call user resize handler\n          slider.settings.onSliderResize.call(el, slider.active.index);\n        }\n      }\n    };\n\n    /**\n     * Adds an aria-hidden=true attribute to each element\n     *\n     * @param startVisibleIndex (int)\n     *  - the first visible element's index\n     */\n    var applyAriaHiddenAttributes = function(startVisibleIndex) {\n      var numberOfSlidesShowing = getNumberSlidesShowing();\n      // only apply attributes if the setting is enabled and not in ticker mode\n      if (slider.settings.ariaHidden && !slider.settings.ticker) {\n        // add aria-hidden=true to all elements\n        slider.children.attr('aria-hidden', 'true');\n        // get the visible elements and change to aria-hidden=false\n        slider.children.slice(startVisibleIndex, startVisibleIndex + numberOfSlidesShowing).attr('aria-hidden', 'false');\n      }\n    };\n\n    /**\n     * Returns index according to present page range\n     *\n     * @param slideOndex (int)\n     *  - the desired slide index\n     */\n    var setSlideIndex = function(slideIndex) {\n      if (slideIndex < 0) {\n        if (slider.settings.infiniteLoop) {\n          return getPagerQty() - 1;\n        }else {\n          //we don't go to undefined slides\n          return slider.active.index;\n        }\n      // if slideIndex is greater than children length, set active index to 0 (this happens during infinite loop)\n      } else if (slideIndex >= getPagerQty()) {\n        if (slider.settings.infiniteLoop) {\n          return 0;\n        } else {\n          //we don't move to undefined pages\n          return slider.active.index;\n        }\n      // set active index to requested slide\n      } else {\n        return slideIndex;\n      }\n    };\n\n    /**\n     * ===================================================================================\n     * = PUBLIC FUNCTIONS\n     * ===================================================================================\n     */\n\n    /**\n     * Performs slide transition to the specified slide\n     *\n     * @param slideIndex (int)\n     *  - the destination slide's index (zero-based)\n     *\n     * @param direction (string)\n     *  - INTERNAL USE ONLY - the direction of travel (\"prev\" / \"next\")\n     */\n    el.goToSlide = function(slideIndex, direction) {\n      // onSlideBefore, onSlideNext, onSlidePrev callbacks\n      // Allow transition canceling based on returned value\n      var performTransition = true,\n      moveBy = 0,\n      position = {left: 0, top: 0},\n      lastChild = null,\n      lastShowingIndex, eq, value, requestEl;\n      // store the old index\n      slider.oldIndex = slider.active.index;\n      //set new index\n      slider.active.index = setSlideIndex(slideIndex);\n\n      // if plugin is currently in motion, ignore request\n      if (slider.working || slider.active.index === slider.oldIndex) { return; }\n      // declare that plugin is in motion\n      slider.working = true;\n\n      performTransition = slider.settings.onSlideBefore.call(el, slider.children.eq(slider.active.index), slider.oldIndex, slider.active.index);\n\n      // If transitions canceled, reset and return\n      if (typeof (performTransition) !== 'undefined' && !performTransition) {\n        slider.active.index = slider.oldIndex; // restore old index\n        slider.working = false; // is not in motion\n        return;\n      }\n\n      if (direction === 'next') {\n        // Prevent canceling in future functions or lack there-of from negating previous commands to cancel\n        if (!slider.settings.onSlideNext.call(el, slider.children.eq(slider.active.index), slider.oldIndex, slider.active.index)) {\n          performTransition = false;\n        }\n      } else if (direction === 'prev') {\n        // Prevent canceling in future functions or lack there-of from negating previous commands to cancel\n        if (!slider.settings.onSlidePrev.call(el, slider.children.eq(slider.active.index), slider.oldIndex, slider.active.index)) {\n          performTransition = false;\n        }\n      }\n\n      // check if last slide\n      slider.active.last = slider.active.index >= getPagerQty() - 1;\n      // update the pager with active class\n      if (slider.settings.pager || slider.settings.pagerCustom) { updatePagerActive(slider.active.index); }\n      // // check for direction control update\n      if (slider.settings.controls) { updateDirectionControls(); }\n      // if slider is set to mode: \"fade\"\n      if (slider.settings.mode === 'fade') {\n        // if adaptiveHeight is true and next height is different from current height, animate to the new height\n        if (slider.settings.adaptiveHeight && slider.viewport.height() !== getViewportHeight()) {\n          slider.viewport.animate({height: getViewportHeight()}, slider.settings.adaptiveHeightSpeed);\n        }\n        // fade out the visible child and reset its z-index value\n        slider.children.filter(':visible').fadeOut(slider.settings.speed).css({zIndex: 0});\n        // fade in the newly requested slide\n        slider.children.eq(slider.active.index).css('zIndex', slider.settings.slideZIndex + 1).fadeIn(slider.settings.speed, function() {\n          $(this).css('zIndex', slider.settings.slideZIndex);\n          updateAfterSlideTransition();\n        });\n      // slider mode is not \"fade\"\n      } else {\n        // if adaptiveHeight is true and next height is different from current height, animate to the new height\n        if (slider.settings.adaptiveHeight && slider.viewport.height() !== getViewportHeight()) {\n          slider.viewport.animate({height: getViewportHeight()}, slider.settings.adaptiveHeightSpeed);\n        }\n        // if carousel and not infinite loop\n        if (!slider.settings.infiniteLoop && slider.carousel && slider.active.last) {\n          if (slider.settings.mode === 'horizontal') {\n            // get the last child position\n            lastChild = slider.children.eq(slider.children.length - 1);\n            position = lastChild.position();\n            // calculate the position of the last slide\n            moveBy = slider.viewport.width() - lastChild.outerWidth();\n          } else {\n            // get last showing index position\n            lastShowingIndex = slider.children.length - slider.settings.minSlides;\n            position = slider.children.eq(lastShowingIndex).position();\n          }\n          // horizontal carousel, going previous while on first slide (infiniteLoop mode)\n        } else if (slider.carousel && slider.active.last && direction === 'prev') {\n          // get the last child position\n          eq = slider.settings.moveSlides === 1 ? slider.settings.maxSlides - getMoveBy() : ((getPagerQty() - 1) * getMoveBy()) - (slider.children.length - slider.settings.maxSlides);\n          lastChild = el.children('.bx-clone').eq(eq);\n          position = lastChild.position();\n        // if infinite loop and \"Next\" is clicked on the last slide\n        } else if (direction === 'next' && slider.active.index === 0) {\n          // get the last clone position\n          position = el.find('> .bx-clone').eq(slider.settings.maxSlides).position();\n          slider.active.last = false;\n        // normal non-zero requests\n        } else if (slideIndex >= 0) {\n          //parseInt is applied to allow floats for slides/page\n          requestEl = slideIndex * parseInt(getMoveBy());\n          position = slider.children.eq(requestEl).position();\n        }\n\n        /* If the position doesn't exist\n         * (e.g. if you destroy the slider on a next click),\n         * it doesn't throw an error.\n         */\n        if (typeof (position) !== 'undefined') {\n          value = slider.settings.mode === 'horizontal' ? -(position.left - moveBy) : -position.top;\n          // plugin values to be animated\n          setPositionProperty(value, 'slide', slider.settings.speed);\n        } else {\n          slider.working = false;\n        }\n      }\n      if (slider.settings.ariaHidden) { applyAriaHiddenAttributes(slider.active.index * getMoveBy()); }\n    };\n\n    /**\n     * Transitions to the next slide in the show\n     */\n    el.goToNextSlide = function() {\n      // if infiniteLoop is false and last page is showing, disregard call\n      if (!slider.settings.infiniteLoop && slider.active.last) { return; }\n      var pagerIndex = parseInt(slider.active.index) + 1;\n      el.goToSlide(pagerIndex, 'next');\n    };\n\n    /**\n     * Transitions to the prev slide in the show\n     */\n    el.goToPrevSlide = function() {\n      // if infiniteLoop is false and last page is showing, disregard call\n      if (!slider.settings.infiniteLoop && slider.active.index === 0) { return; }\n      var pagerIndex = parseInt(slider.active.index) - 1;\n      el.goToSlide(pagerIndex, 'prev');\n    };\n\n    /**\n     * Starts the auto show\n     *\n     * @param preventControlUpdate (boolean)\n     *  - if true, auto controls state will not be updated\n     */\n    el.startAuto = function(preventControlUpdate) {\n      // if an interval already exists, disregard call\n      if (slider.interval) { return; }\n      // create an interval\n      slider.interval = setInterval(function() {\n        if (slider.settings.autoDirection === 'next') {\n          el.goToNextSlide();\n        } else {\n          el.goToPrevSlide();\n        }\n      }, slider.settings.pause);\n      // if auto controls are displayed and preventControlUpdate is not true\n      if (slider.settings.autoControls && preventControlUpdate !== true) { updateAutoControls('stop'); }\n    };\n\n    /**\n     * Stops the auto show\n     *\n     * @param preventControlUpdate (boolean)\n     *  - if true, auto controls state will not be updated\n     */\n    el.stopAuto = function(preventControlUpdate) {\n      // if no interval exists, disregard call\n      if (!slider.interval) { return; }\n      // clear the interval\n      clearInterval(slider.interval);\n      slider.interval = null;\n      // if auto controls are displayed and preventControlUpdate is not true\n      if (slider.settings.autoControls && preventControlUpdate !== true) { updateAutoControls('start'); }\n    };\n\n    /**\n     * Returns current slide index (zero-based)\n     */\n    el.getCurrentSlide = function() {\n      return slider.active.index;\n    };\n\n    /**\n     * Returns current slide element\n     */\n    el.getCurrentSlideElement = function() {\n      return slider.children.eq(slider.active.index);\n    };\n\n    /**\n     * Returns a slide element\n     * @param index (int)\n     *  - The index (zero-based) of the element you want returned.\n     */\n    el.getSlideElement = function(index) {\n      return slider.children.eq(index);\n    };\n\n    /**\n     * Returns number of slides in show\n     */\n    el.getSlideCount = function() {\n      return slider.children.length;\n    };\n\n    /**\n     * Return slider.working variable\n     */\n    el.isWorking = function() {\n      return slider.working;\n    };\n\n    /**\n     * Update all dynamic slider elements\n     */\n    el.redrawSlider = function() {\n      // resize all children in ratio to new screen size\n      slider.children.add(el.find('.bx-clone')).outerWidth(getSlideWidth());\n      // adjust the height\n      slider.viewport.css('height', getViewportHeight());\n      // update the slide position\n      if (!slider.settings.ticker) { setSlidePosition(); }\n      // if active.last was true before the screen resize, we want\n      // to keep it last no matter what screen size we end on\n      if (slider.active.last) { slider.active.index = getPagerQty() - 1; }\n      // if the active index (page) no longer exists due to the resize, simply set the index as last\n      if (slider.active.index >= getPagerQty()) { slider.active.last = true; }\n      // if a pager is being displayed and a custom pager is not being used, update it\n      if (slider.settings.pager && !slider.settings.pagerCustom) {\n        populatePager();\n        updatePagerActive(slider.active.index);\n      }\n      if (slider.settings.ariaHidden) { applyAriaHiddenAttributes(slider.active.index * getMoveBy()); }\n    };\n\n    /**\n     * Destroy the current instance of the slider (revert everything back to original state)\n     */\n    el.destroySlider = function() {\n      // don't do anything if slider has already been destroyed\n      if (!slider.initialized) { return; }\n      slider.initialized = false;\n      $('.bx-clone', this).remove();\n      slider.children.each(function() {\n        if ($(this).data('origStyle') !== undefined) {\n          $(this).attr('style', $(this).data('origStyle'));\n        } else {\n          $(this).removeAttr('style');\n        }\n      });\n      if ($(this).data('origStyle') !== undefined) {\n        this.attr('style', $(this).data('origStyle'));\n      } else {\n        $(this).removeAttr('style');\n      }\n      $(this).unwrap().unwrap();\n      if (slider.controls.el) { slider.controls.el.remove(); }\n      if (slider.controls.next) { slider.controls.next.remove(); }\n      if (slider.controls.prev) { slider.controls.prev.remove(); }\n      if (slider.pagerEl && slider.settings.controls && !slider.settings.pagerCustom) { slider.pagerEl.remove(); }\n      $('.bx-caption', this).remove();\n      if (slider.controls.autoEl) { slider.controls.autoEl.remove(); }\n      clearInterval(slider.interval);\n      if (slider.settings.responsive) { $(window).unbind('resize', resizeWindow); }\n      if (slider.settings.keyboardEnabled) { $(document).unbind('keydown', keyPress); }\n      //remove self reference in data\n      $(this).removeData('bxSlider');\n    };\n\n    /**\n     * Reload the slider (revert all DOM changes, and re-initialize)\n     */\n    el.reloadSlider = function(settings) {\n      if (settings !== undefined) { options = settings; }\n      el.destroySlider();\n      init();\n      //store reference to self in order to access public functions later\n      $(el).data('bxSlider', this);\n    };\n\n    init();\n\n    $(el).data('bxSlider', this);\n\n    // returns the current jQuery object\n    return this;\n  };\n\n})(jQuery);\n","/**\n * equalize.js\n * Author & copyright (c) 2012: Tim Svensen\n * Dual MIT & GPL license\n *\n * Page: http://tsvensen.github.com/equalize.js\n * Repo: https://github.com/tsvensen/equalize.js/\n *\n * The jQuery plugin for equalizing the height or width of elements.\n *\n * Equalize will accept any of the jQuery Dimension methods:\n *   height, outerHeight, innerHeight,\n *   width, outerWidth, innerWidth.\n *\n * EXAMPLE\n * $('.parent').equalize(); // defaults to 'height'\n * $('.parent').equalize('width'); // equalize the widths\n *\n * ADVANCED EXAMPLES\n * Get the minimum max dimension by removing the existing height/width\n * $('.parent').equalize({reset: true}); // equalize height by default, remove existing height, then determin max\n * $('.parent').equalize({equalize: 'width', reset: true}); // equalize width, remove existing width, then determin max\n *\n * Equalize internal child elements\n * From @larsbo : http://jsfiddle.net/4QTNP/3/\n * $('.parent').equalize({children: 'p'}); // equalize height of paragraphs within .parent\n */\n;(function($) {\n\n  $.fn.equalize = function(options) {\n    var $containers = this, // this is the jQuery object\n        children    = false,\n        reset       = false,\n        equalize,\n        type;\n\n    // when options are an object\n    if ($.isPlainObject(options)) {\n      equalize = options.equalize || 'height';\n      children = options.children || false;\n      reset    = options.reset || false;\n    } else { // otherwise, a string was passed in or default to height\n      equalize = options || 'height';\n    }\n\n    if (!$.isFunction($.fn[equalize])) { return false; }\n\n    // determine if the height or width is being equalized\n    type = (equalize.indexOf('eight') > 0) ? 'height' : 'width';\n\n    return $containers.each(function() {\n          // when children exist, equalize the passed in child elements, otherwise equalize the children\n      var $children = (children) ? $(this).find(children) : $(this).children(),\n          max = 0; // reset for each container\n\n      $children.each(function() {\n        var $element = $(this),\n            value;\n        if (reset) { $element.css(type, ''); } // remove existing height/width dimension\n        value = $element[equalize]();          // call height(), outerHeight(), etc.\n        if (value > max) { max = value; }      // update max\n      });\n\n      $children.css(type, max +'px'); // add CSS to children\n    });\n  };\n\n}(jQuery));\n","/*!\n * equalize.js\n * Author & copyright (c) 2012: Tim Svensen\n * Dual MIT & GPL license\n *\n * Page: http://tsvensen.github.com/equalize.js\n * Repo: https://github.com/tsvensen/equalize.js/\n */\n!function(i){i.fn.equalize=function(e){var n,t,h=!1,c=!1;return i.isPlainObject(e)?(n=e.equalize||\"height\",h=e.children||!1,c=e.reset||!1):n=e||\"height\",i.isFunction(i.fn[n])?(t=0<n.indexOf(\"eight\")?\"height\":\"width\",this.each(function(){var e=h?i(this).find(h):i(this).children(),s=0;e.each(function(){var e=i(this);c&&e.css(t,\"\"),e=e[n](),e>s&&(s=e)}),e.css(t,s+\"px\")})):!1}}(jQuery);","/*!\n * Scrollbox v2.4.0\n * (c) 2013-2016, Max Invis1ble\n * Licensed under MIT (https://opensource.org/licenses/mit-license.php)\n */\n\n+function ($, window, document, undefined) {\n\n    'use strict';\n\n    var name = 'scrollbox',\n        Scrollbox = function ($element, options) {\n            (function (that, options, methods) {\n                that.options = options;\n\n                that.$element = $element;\n                that.$rail = $(options.templates.rail);\n                that.$bar = $(options.templates.bar);\n                \n                $.each(methods, function (i, method) {\n                    if (options[method]) {\n                        that[method] = options[method];\n                    }\n                });\n\n                that._isBarCaptured = that._isShown = that._isCorrectionRequired = false;\n                that._prevY = 0;\n                that._isReachTriggered = { top: false, bottom: false };\n                that._scrollHeight = undefined;\n                that._setScrolledToY($element.scrollTop());\n                that._barTouchId = that._elementTouchId = that._swipeStartY = that._swipeStartedAt = null;\n\n                that.init();\n            })(this, $.extend({}, $.fn[name].defaults, options), [\n                'init',\n                'addListeners',\n                'removeListeners',\n                'scroll',\n                'jump',\n                'update',\n                'destroy'\n            ]);\n        };\n\n    Scrollbox.prototype = {\n\n        init: function () {\n            (function (that, options) {\n                that.$wrapper = that.$element\n                    .trigger('init.' + name)\n                    .addClass('scrollbox-overflowed')\n                    .wrap(options.templates.wrapper).parent()\n                    .append(that.$rail)\n                    .append(that.$bar);\n                \n                that._updateBarHeight();\n\n                if (that._isShown) {\n                    that.addListeners();\n                }\n\n                that.jump(options.start);\n            })(this, this.options);\n        },\n\n        addListeners: function () {\n            (function (that, proxy) {\n                that.$wrapper.on('mousewheel', proxy(that, '_onWheel'));\n\n                that.$bar.on({\n                    mousedown: proxy(that, '_onBarMouseDown'),\n                    touchstart: proxy(that, '_onBarTouchStart')\n                });\n\n                that.$element.on({\n                    scroll: proxy(that, '_onElementScroll'),\n                    touchstart: proxy(that, '_onElementTouchStart')\n                });\n\n                $(document).on({\n                    mouseup: proxy(that, '_onDocumentMouseUp'),\n                    mousemove: proxy(that, '_onDocumentMouseMove'),\n                    touchend: proxy(that, '_onDocumentTouchEnd'),\n                    touchmove: proxy(that, '_onDocumentTouchMove')\n                });\n            })(this, $.proxy);\n        },\n\n        removeListeners: function () {\n            (function (that) {\n                that.$wrapper.off('mousewheel', that._onWheel);\n\n                that.$bar.off({\n                    mousedown: that._onBarMouseDown,\n                    touchstart: that._onBarTouchStart\n                });\n\n                that.$element.off({\n                    scroll: that._onElementScroll,\n                    touchstart: that._onElementTouchStart\n                });\n\n                $(document).off({\n                    mouseup: that._onDocumentMouseUp,\n                    mousemove: that._onDocumentMouseMove,\n                    touchend: that._onDocumentTouchEnd,\n                    touchmove: that._onDocumentTouchMove\n                });\n            })(this);\n        },\n\n        _onWheel: function (e) {\n            e.preventDefault();\n            \n            this.scroll(-e.deltaY * this.options.wheelSensitivity);\n        },\n\n        _onBarMouseDown: function (e) {\n            if (1 === e.which) {\n                e.preventDefault();\n\n                this._dragStart(e.pageY);\n            }\n        },\n\n        _onDocumentMouseMove: function (e) {\n            if (this._isBarCaptured) {\n                e.preventDefault();\n\n                this._drag(e.pageY);\n            }\n        },\n\n        _onDocumentMouseUp: function (e) {\n            if (this._isBarCaptured && 1 === e.which) {\n                e.preventDefault();\n\n                this._dragStop();\n            }\n        },\n\n        _onBarTouchStart: function (e) {\n            var touches = e.originalEvent.targetTouches;\n\n            if (1 == touches.length) {\n                e.preventDefault();\n\n                this._barTouchId = touches[0].identifier;\n                this._dragStart(touches[0].pageY);\n            }\n        },\n\n        _onDocumentTouchMove: function (e) {\n            var touches = e.originalEvent.targetTouches;\n\n            if (this._isBarCaptured) {\n                $.each(touches, $.proxy(function (i, touch) {\n                    if (touch.identifier === this._barTouchId) {\n                        e.preventDefault();\n\n                        this._drag(touch.pageY);\n                        return false;\n                    }\n                }, this));\n            }\n\n            if (null !== this._elementTouchId) {\n                $.each(touches, $.proxy(function (i, touch) {\n                    if (touch.identifier === this._elementTouchId) {\n                        e.preventDefault();\n\n                        this._swipe(touch.pageY);\n                        return false;\n                    }\n                }, this));\n            }\n        },\n\n        _onDocumentTouchEnd: function (e) {\n            var touches = e.originalEvent.changedTouches,\n                swipeDuration,\n                swipeDistance,\n                swipeSpeed,\n                offset;\n\n            if (this._isBarCaptured) {\n                $.each(touches, $.proxy(function (i, touch) {\n                    if (touch.identifier === this._barTouchId) {\n                        e.preventDefault();\n\n                        this._dragStop();\n                        this._barTouchId = null;\n                        return false;\n                    }\n                }, this));\n            }\n\n            if (null !== this._elementTouchId) {\n                $.each(touches, $.proxy(function (i, touch) {\n                    if (touch.identifier === this._elementTouchId) {\n                        swipeDuration = Date.now() - this._swipeStartedAt;\n\n                        if (swipeDuration <= this.options.momentum.thresholdTime) {\n                            swipeDistance = this._swipeStartY - touch.pageY;\n                            swipeSpeed = Math.abs(swipeDistance / swipeDuration);\n                            offset = swipeSpeed * swipeSpeed * 2 * this.options.momentum.acceleration;\n\n                            if (swipeDistance < 0) {\n                                offset = -offset;\n                            }\n\n                            this.scroll(offset, {\n                                duration: swipeSpeed * this.options.momentum.acceleration,\n                                easing: 'momentum'\n                            });\n                        }\n\n                        this._swipeStartY = this._swipeStartedAt = this._elementTouchId = null;\n                        return false;\n                    }\n                }, this));\n            }\n        },\n\n        _onElementScroll: function (e) {\n            e.preventDefault();\n            \n            if (this._isCorrectionRequired) {\n                this._isCorrectionRequired = false;\n            } else {\n                this._setScrolledToY(this.$element.scrollTop());\n            }\n\n            this._updateBarPosition();\n            this._checkIsReached();\n        },\n\n        _onElementTouchStart: function (e) {\n            var touches = e.originalEvent.targetTouches;\n\n            if (1 == touches.length) {\n                if (this.$element.is(':animated')) {\n                    this.$element.stop(true, false);\n                }\n\n                this._elementTouchId = touches[0].identifier;\n                this._swipeStartY = this._prevY = touches[0].pageY;\n                this._swipeStartedAt = Date.now();\n            }\n        },\n\n        _dragStart: function (y) {\n            this._isBarCaptured = true;\n            this._prevY = y;\n\n            this.$bar.addClass(name + '-bar-captured');\n        },\n\n        _drag: function (y) {\n            var elementHeight = this.$element.outerHeight();\n\n            this.scroll((y - this._prevY) * ((this._getScrollHeight() - elementHeight) / (elementHeight - this.$bar.height())));\n            this._prevY = y;\n        },\n\n        _dragStop: function () {\n            this._isBarCaptured = false;\n\n            this.$bar.removeClass(name + '-bar-captured');\n        },\n\n        _swipe: function (y) {\n            this.scroll(this._prevY - y);\n            this._prevY = y;\n        },\n\n        scroll: function (delta, animationOptions) {\n            var max = this._getScrollHeight() - this.$element.outerHeight(),\n                destination = this._getScrolledToY() + delta,\n                computedDestination;\n\n            this.$element\n                .trigger('scroll.' + name)\n                .stop(true, false);\n\n            if (0 === delta) {\n                this._checkIsReached();\n            } else {\n                if (destination >= max) {\n                    computedDestination = max;\n                } else if (destination <= 0) {\n                    computedDestination = 0;\n                } else {\n                    computedDestination = destination;\n                }\n\n                if (undefined === animationOptions) {\n                    this._isCorrectionRequired = true;\n                    this.$element.scrollTop(computedDestination);\n                    this._setScrolledToY(computedDestination);\n                } else {\n                    animationOptions.progress = $.proxy(function (animation) {\n                        if (computedDestination !== destination && computedDestination === this._getScrolledToY()) {\n                            animation.stop();\n                        }\n                    }, this);\n\n                    this.$element.animate({\n                        scrollTop: destination\n                    }, animationOptions);\n                }\n            }\n        },\n\n        jump: function (y, animationOptions) {\n            if ('top' === y) {\n                y = 0;\n            } else if ('bottom' === y) {\n                y = this._getScrollHeight() - this.$element.height();\n            }\n\n            this.scroll(y - this._getScrolledToY(), animationOptions);\n        },\n\n        update: function () {\n            var isShown = this._isShown;\n\n            this._scrollHeight = undefined;\n            this._isReachTriggered.top = this._isReachTriggered.bottom = false;\n            this._updateBarHeight();\n\n            if (this._isShown) {\n                this._updateBarPosition();\n\n                if (!isShown) {\n                    this.addListeners();\n                }\n            }\n        },\n\n        _getScrolledToY: function () {\n            return this._scrolledToY;\n        },\n\n        _setScrolledToY: function (y) {\n            this._scrolledToY = y;\n        },\n\n        _getScrollHeight: function () {\n            // opera bug workaround\n            if (undefined === this._scrollHeight) {\n                this._scrollHeight = this.$element[0].scrollHeight;\n            }\n\n            return this._scrollHeight;\n        },\n\n        _updateBarHeight: function () {\n            var elementHeight = this.$element.outerHeight(),\n                ratio = elementHeight / this._getScrollHeight();\n\n            if (1 !== ratio) {\n                this.$bar.height(elementHeight * ratio);\n\n                if (!this._isShown) {\n                    this.$bar.addClass(name + '-bar-in');\n                    this.$rail.addClass(name + '-rail-in');\n                    this._isShown = true;\n                }\n            } else if (this._isShown) {\n                this.removeListeners();\n                this.$bar.removeClass(name + '-bar-in');\n                this.$rail.removeClass(name + '-rail-in');\n                this._isShown = false;\n            }\n        },\n\n        _updateBarPosition: function () {\n            var elementHeight = this.$element.outerHeight();\n\n            this.$bar.css(\n                'top',\n                (elementHeight - this.$bar.outerHeight()) * (this.$element.scrollTop() / (this._getScrollHeight() - elementHeight))\n            );\n        },\n\n        _checkIsReached: function () {\n            var scrolledTo = this.$element.scrollTop(),\n                position;\n\n            if (\n                !this._isReachTriggered.bottom\n                && scrolledTo + this.options.distanceToReach >= this._getScrollHeight() - this.$element.outerHeight()\n            ) {\n                position = 'bottom';\n            } else if (\n                !this._isReachTriggered.top\n                && scrolledTo - this.options.distanceToReach <= 0\n            ) {\n                position = 'top';\n            }\n\n            if (position) {\n                this.$element.trigger($.Event('reach.' + name, { position: position }));\n                this._isReachTriggered[position] = true;\n            }\n        },\n\n        destroy: function () {\n            this.removeListeners();\n\n            this.$element\n                .removeClass('scrollbox-overflowed')\n                .unwrap()\n                .removeData(name);\n\n            this.$rail.remove();\n            this.$bar.remove();\n\n            this.$bar = this.$rail = this.$element = this.$wrapper = null;\n        }\n\n    };\n\n    if (undefined === $.easing.momentum) {\n        // easeOutExpo\n        $.easing.momentum = function (x, t, b, c, d) {\n            return t == d ? b + c : c * (- Math.pow(2, -10 * t / d) + 1) + b;\n        };\n    }\n\n    $.fn[name] = function (option) {\n        var args = Array.prototype.slice.call(arguments, 1);\n\n        return this.each(function () {\n            var $this = $(this),\n                data = $this.data(name),\n                options;\n\n            if ('object' === typeof option) {\n                options = option;\n            }\n\n            if (!data) {\n                $this.data(name, (data = new Scrollbox($this, options)));\n            }\n\n            if ('string' === typeof option) {\n                data[option].apply(data, args);\n            }\n        });\n    };\n\n    $.fn[name].Constructor = Scrollbox;\n\n    $.fn[name].defaults = {\n        distanceToReach: 0,\n        wheelSensitivity: 20,\n        momentum: {\n            acceleration: 1600,\n            thresholdTime: 500\n        },\n        start: 'top',\n        templates: {\n            bar: '<div class=\"' + name + '-bar\"></div>',\n            rail: '<div class=\"' + name + '-rail\"></div>',\n            wrapper: '<div class=\"' + name + '-wrapper\"></div>'\n        }\n    };\n\n}(jQuery, window, document);","jQuery(document).ready(function ($) {\n\t\n\t$('.eqh').equalize();\n\n\n    // ---------------------------------------------------------\n    // 固定侧边栏\n    // ---------------------------------------------------------\n    // $(\".topin\").pin();\n\n\n\n    // ---------------------------------------------------------\n    // 结束功能\n    // ---------------------------------------------------------\n\n});\n"],"sourceRoot":"assets/scripts/"}